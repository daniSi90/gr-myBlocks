<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classQCPGraph" kind="class" prot="public">
    <compoundname>QCPGraph</compoundname>
    <basecompoundref refid="classQCPAbstractPlottable" prot="public" virt="non-virtual">QCPAbstractPlottable</basecompoundref>
    <includes refid="qcustomplot_8h" local="no">qcustomplot.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859" prot="public" static="no">
        <name>LineStyle</name>
        <enumvalue id="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" prot="public">
          <name>lsNone</name>
          <briefdescription>
<para>data points are not connected with any lines (e.g. data only represented &lt; with symbols according to the scatter style, see <ref refid="classQCPGraph_1a12bd17a8ba21983163ec5d8f42a9fea5" kindref="member">setScatterStyle</ref>) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859a3c42a27b15aa3c92d399082fad8b7515" prot="public">
          <name>lsLine</name>
          <briefdescription>
<para>data points are connected by a straight line </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859ae10568bda57836487d9dec5eba1d6c6e" prot="public">
          <name>lsStepLeft</name>
          <briefdescription>
<para>line is drawn as steps where the step height is the value of the left data point </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859a9c37951f7d11aa070100fd16f2935c9e" prot="public">
          <name>lsStepRight</name>
          <briefdescription>
<para>line is drawn as steps where the step height is the value of the right data point </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859a5adf7b04da215a40a764c21294ea7366" prot="public">
          <name>lsStepCenter</name>
          <briefdescription>
<para>line is drawn as steps where the step is in between two data points </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" prot="public">
          <name>lsImpulse</name>
          <briefdescription>
<para>each data point is represented by a line parallel to the value axis, which reaches from the data point to the zero-value-line </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines how the graph&apos;s line is represented visually in the plot. The line is drawn with the current pen of the graph (<ref refid="classQCPAbstractPlottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" kindref="member">setPen</ref>). <simplesect kind="see"><para><ref refid="classQCPGraph_1a513fecccff5b2a50ce53f665338c60ff" kindref="member">setLineStyle</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2509" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2509" bodyend="2516"/>
      </memberdef>
      <memberdef kind="enum" id="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6af" prot="public" static="no">
        <name>ErrorType</name>
        <enumvalue id="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6afaeae745e7cc1766bb8546e35d4b76a711" prot="public">
          <name>etNone</name>
          <briefdescription>
<para>No error bars are shown. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6afa2a5d89cd76fb8b6b18d71b8f6f6c0f43" prot="public">
          <name>etKey</name>
          <briefdescription>
<para>Error bars for the key dimension of the data point are shown. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6afa147022ccdc49f6bd48f904cb4f61872e" prot="public">
          <name>etValue</name>
          <briefdescription>
<para>Error bars for the value dimension of the data point are shown. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6afa761cb7d61670c1e2efecccd8974409ab" prot="public">
          <name>etBoth</name>
          <briefdescription>
<para>Error bars for both key and value dimensions of the data point are shown. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines what kind of error bars are drawn for each data point </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2521" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2521" bodyend="2525"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQCPGraph_1a8457c840f69a0ac49f61d30a509c5d08" prot="protected" static="no" mutable="no">
        <type><ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref> *</type>
        <definition>QCPDataMap* QCPGraph::mData</definition>
        <argsstring></argsstring>
        <name>mData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2582" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2582" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPGraph_1aa35681a24165c2831301091a87b662ce" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPGraph::mErrorPen</definition>
        <argsstring></argsstring>
        <name>mErrorPen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2583" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPGraph_1a8604fd98402035a63375849f7341ee25" prot="protected" static="no" mutable="no">
        <type><ref refid="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859" kindref="member">LineStyle</ref></type>
        <definition>LineStyle QCPGraph::mLineStyle</definition>
        <argsstring></argsstring>
        <name>mLineStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2584" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPGraph_1a4aa36241f166ccd1f75fc8f24e4a3247" prot="protected" static="no" mutable="no">
        <type><ref refid="classQCPScatterStyle" kindref="compound">QCPScatterStyle</ref></type>
        <definition>QCPScatterStyle QCPGraph::mScatterStyle</definition>
        <argsstring></argsstring>
        <name>mScatterStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2585" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPGraph_1a29e64273db201aeadebc61c870720a36" prot="protected" static="no" mutable="no">
        <type><ref refid="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6af" kindref="member">ErrorType</ref></type>
        <definition>ErrorType QCPGraph::mErrorType</definition>
        <argsstring></argsstring>
        <name>mErrorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2586" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPGraph_1a7b51c8d09510f9d195b5e765ccbcf05b" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QCPGraph::mErrorBarSize</definition>
        <argsstring></argsstring>
        <name>mErrorBarSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2587" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2587" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPGraph_1acf631d7dbd1055a69ab3b63094868557" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPGraph::mErrorBarSkipSymbol</definition>
        <argsstring></argsstring>
        <name>mErrorBarSkipSymbol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2588" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPGraph_1a2f1777c7accf8244fc640c33f0b04577" prot="protected" static="no" mutable="no">
        <type>QPointer&lt; <ref refid="classQCPGraph" kindref="compound">QCPGraph</ref> &gt;</type>
        <definition>QPointer&lt;QCPGraph&gt; QCPGraph::mChannelFillGraph</definition>
        <argsstring></argsstring>
        <name>mChannelFillGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2589" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2589" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPGraph_1aa951e78aeba714cf443be6da2e52502e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPGraph::mAdaptiveSampling</definition>
        <argsstring></argsstring>
        <name>mAdaptiveSampling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2590" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2590" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classQCPGraph_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class QCustomPlot</definition>
        <argsstring></argsstring>
        <name>QCustomPlot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2629" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2629" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classQCPGraph_1a8429035e7adfbd7f05805a6530ad5e3b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class QCPLegend</definition>
        <argsstring></argsstring>
        <name>QCPLegend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2630" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2630" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQCPGraph_1a0393a38cf7183cbf46348eb6cf9a5a6c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPGraph::QCPGraph</definition>
        <argsstring>(QCPAxis *keyAxis, QCPAxis *valueAxis)</argsstring>
        <name>QCPGraph</name>
        <param>
          <type><ref refid="classQCPAxis" kindref="compound">QCPAxis</ref> *</type>
          <declname>keyAxis</declname>
        </param>
        <param>
          <type><ref refid="classQCPAxis" kindref="compound">QCPAxis</ref> *</type>
          <declname>valueAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2528" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1af83f8a67de5a3bad28c30421831e12eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QCPGraph::~QCPGraph</definition>
        <argsstring>()</argsstring>
        <name>~QCPGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a525b29295f9dcfcb569b99709673c2be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref> *</type>
        <definition>QCPDataMap* QCPGraph::data</definition>
        <argsstring>() const </argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2532" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2532" bodyend="2532"/>
        <referencedby refid="classQCPGraph_1a5369f23863e04a6164f8b66d49fd18f4" compoundref="qcustomplot_8h" startline="2539" endline="2539">channelFillGraph</referencedby>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ad6db8d31abeac256a285fc68d6b9b9be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859" kindref="member">LineStyle</ref></type>
        <definition>LineStyle QCPGraph::lineStyle</definition>
        <argsstring>() const </argsstring>
        <name>lineStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2533" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2533" bodyend="2533"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ae0227c79f4e42a350c2c99fb2fb879db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQCPScatterStyle" kindref="compound">QCPScatterStyle</ref></type>
        <definition>QCPScatterStyle QCPGraph::scatterStyle</definition>
        <argsstring>() const </argsstring>
        <name>scatterStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2534" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2534" bodyend="2534"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a250bcdf78abac87bc6d46ee6fd99a92d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6af" kindref="member">ErrorType</ref></type>
        <definition>ErrorType QCPGraph::errorType</definition>
        <argsstring>() const </argsstring>
        <name>errorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2535" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2535" bodyend="2535"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a83455e01093bb899f3b59d4a6fdcd57b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPGraph::errorPen</definition>
        <argsstring>() const </argsstring>
        <name>errorPen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2536" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2536" bodyend="2536"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ae31efdcbc6ba3d73a7aeb83c774f958a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QCPGraph::errorBarSize</definition>
        <argsstring>() const </argsstring>
        <name>errorBarSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2537" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2537" bodyend="2537"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a04dbc050ff04561658ab1e7f3df37a01" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPGraph::errorBarSkipSymbol</definition>
        <argsstring>() const </argsstring>
        <name>errorBarSkipSymbol</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2538" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2538" bodyend="2538"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a5369f23863e04a6164f8b66d49fd18f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQCPGraph" kindref="compound">QCPGraph</ref> *</type>
        <definition>QCPGraph* QCPGraph::channelFillGraph</definition>
        <argsstring>() const </argsstring>
        <name>channelFillGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2539" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2539" bodyend="2539"/>
        <references refid="classQCPGraph_1a525b29295f9dcfcb569b99709673c2be" compoundref="qcustomplot_8h" startline="2532" endline="2532">data</references>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ad3bea28ec910eedfa9b788928d610de0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPGraph::adaptiveSampling</definition>
        <argsstring>() const </argsstring>
        <name>adaptiveSampling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2540" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2540" bodyend="2540"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a1df2fd710545c8ba3b2c99a39a27bf8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setData</definition>
        <argsstring>(QCPDataMap *data, bool copy=false)</argsstring>
        <name>setData</name>
        <param>
          <type><ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a4c55d8ac13bfa42c8c93747820891a76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value)</argsstring>
        <name>setData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1abce9f07c0d722bc3e4fa7bd73c7e5dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setDataKeyError</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value, const QVector&lt; double &gt; &amp;keyError)</argsstring>
        <name>setDataKeyError</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keyError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2545" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ac15c749c5fedf740d5692c6fe67143b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setDataKeyError</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value, const QVector&lt; double &gt; &amp;keyErrorMinus, const QVector&lt; double &gt; &amp;keyErrorPlus)</argsstring>
        <name>setDataKeyError</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keyErrorMinus</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keyErrorPlus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2546" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1acba6296eadcb36b93267628b8dae3de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setDataValueError</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value, const QVector&lt; double &gt; &amp;valueError)</argsstring>
        <name>setDataValueError</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>valueError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2547" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a3afbfd7222d739351c69387904776f93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setDataValueError</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value, const QVector&lt; double &gt; &amp;valueErrorMinus, const QVector&lt; double &gt; &amp;valueErrorPlus)</argsstring>
        <name>setDataValueError</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>valueErrorMinus</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>valueErrorPlus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2548" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a873fe46bdb20be5710428e474ade8908" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setDataBothError</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value, const QVector&lt; double &gt; &amp;keyError, const QVector&lt; double &gt; &amp;valueError)</argsstring>
        <name>setDataBothError</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keyError</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>valueError</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2549" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1abb75736ecdbf6e6a7501e1da64fb18cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setDataBothError</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value, const QVector&lt; double &gt; &amp;keyErrorMinus, const QVector&lt; double &gt; &amp;keyErrorPlus, const QVector&lt; double &gt; &amp;valueErrorMinus, const QVector&lt; double &gt; &amp;valueErrorPlus)</argsstring>
        <name>setDataBothError</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keyErrorMinus</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keyErrorPlus</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>valueErrorMinus</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>valueErrorPlus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2550" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a513fecccff5b2a50ce53f665338c60ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setLineStyle</definition>
        <argsstring>(LineStyle ls)</argsstring>
        <name>setLineStyle</name>
        <param>
          <type><ref refid="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859" kindref="member">LineStyle</ref></type>
          <declname>ls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a12bd17a8ba21983163ec5d8f42a9fea5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setScatterStyle</definition>
        <argsstring>(const QCPScatterStyle &amp;style)</argsstring>
        <name>setScatterStyle</name>
        <param>
          <type>const <ref refid="classQCPScatterStyle" kindref="compound">QCPScatterStyle</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2552" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ac3614d799c3894f2bc646e99c7f73d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setErrorType</definition>
        <argsstring>(ErrorType errorType)</argsstring>
        <name>setErrorType</name>
        <param>
          <type><ref refid="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6af" kindref="member">ErrorType</ref></type>
          <declname>errorType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2553" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1abd4c7f81939e10776ea64603a704f22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setErrorPen</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setErrorPen</name>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2554" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a10f50c5495ce45ef559ec2066194a335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setErrorBarSize</definition>
        <argsstring>(double size)</argsstring>
        <name>setErrorBarSize</name>
        <param>
          <type>double</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2555" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ab1c1ee03d8dd94676a564e5e5f11aac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setErrorBarSkipSymbol</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setErrorBarSkipSymbol</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2556" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a2d03156df1b64037a2e36cfa50351ca3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setChannelFillGraph</definition>
        <argsstring>(QCPGraph *targetGraph)</argsstring>
        <name>setChannelFillGraph</name>
        <param>
          <type><ref refid="classQCPGraph" kindref="compound">QCPGraph</ref> *</type>
          <declname>targetGraph</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2557" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ab468cd600160f327836aa0644291e64c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::setAdaptiveSampling</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setAdaptiveSampling</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2558" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::addData</definition>
        <argsstring>(const QCPDataMap &amp;dataMap)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="qcustomplot_8h_1a84a9c4a4c2216ccfdcb5f3067cda76e3" kindref="member">QCPDataMap</ref> &amp;</type>
          <declname>dataMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2561" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a80cc91e1e0ef77eb50afc5b366d0efd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::addData</definition>
        <argsstring>(const QCPData &amp;data)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="classQCPData" kindref="compound">QCPData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2562" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a0bf98b1972286cfb7b1c4b7dd6ae2012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::addData</definition>
        <argsstring>(double key, double value)</argsstring>
        <name>addData</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2563" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ab6da6377541fe80d892a9893a92db9c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::addData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;keys, const QVector&lt; double &gt; &amp;values)</argsstring>
        <name>addData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a9fe0b3e54e8c7b61319bd03337e21e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::removeDataBefore</definition>
        <argsstring>(double key)</argsstring>
        <name>removeDataBefore</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2565" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ae42d645ef617cfc75fc0df58e62c522a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::removeDataAfter</definition>
        <argsstring>(double key)</argsstring>
        <name>removeDataAfter</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2566" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a4a0fde50b7db9db0a85b5c5b6b10098f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::removeData</definition>
        <argsstring>(double fromKey, double toKey)</argsstring>
        <name>removeData</name>
        <param>
          <type>double</type>
          <declname>fromKey</declname>
        </param>
        <param>
          <type>double</type>
          <declname>toKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2567" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a4a706020b4318f118381648ef18aca3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::removeData</definition>
        <argsstring>(double key)</argsstring>
        <name>removeData</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2568" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a1d199d5a0b18c24ddc1ddfd2ba00a67b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPGraph::clearData</definition>
        <argsstring>()</argsstring>
        <name>clearData</name>
        <reimplements refid="classQCPAbstractPlottable_1a7d8e47f8558a0f224d3ae1e214475d14">clearData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2571" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a753acc1154d30a3574ed28f366acae25" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double QCPGraph::selectTest</definition>
        <argsstring>(const QPointF &amp;pos, bool onlySelectable, QVariant *details=0) const </argsstring>
        <name>selectTest</name>
        <reimplements refid="classQCPAbstractPlottable_1a38efe9641d972992a3d44204bc80ec1d">selectTest</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelectable</declname>
        </param>
        <param>
          <type>QVariant *</type>
          <declname>details</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2572" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1aa35b75b9032800d783df749c8a004ee9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::rescaleAxes</definition>
        <argsstring>(bool onlyEnlarge, bool includeErrorBars) const </argsstring>
        <name>rescaleAxes</name>
        <param>
          <type>bool</type>
          <declname>onlyEnlarge</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeErrorBars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2576" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a2108a729046b0ab6e0516afb249dab13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::rescaleKeyAxis</definition>
        <argsstring>(bool onlyEnlarge, bool includeErrorBars) const </argsstring>
        <name>rescaleKeyAxis</name>
        <param>
          <type>bool</type>
          <declname>onlyEnlarge</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeErrorBars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2577" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a2ba0e1df416486d7e74299ef8cf68bba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::rescaleValueAxis</definition>
        <argsstring>(bool onlyEnlarge, bool includeErrorBars) const </argsstring>
        <name>rescaleValueAxis</name>
        <param>
          <type>bool</type>
          <declname>onlyEnlarge</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeErrorBars</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2578" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQCPGraph_1af12398626b646cae525d1d5bb8eb7a76" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPGraph::draw</definition>
        <argsstring>(QCPPainter *painter)</argsstring>
        <name>draw</name>
        <reimplements refid="classQCPAbstractPlottable_1acbab5e30dcd04fd302b4a5902ac2c482">draw</reimplements>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2593" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a49561e6e4e643e7cf09267be46783a8a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPGraph::drawLegendIcon</definition>
        <argsstring>(QCPPainter *painter, const QRectF &amp;rect) const </argsstring>
        <name>drawLegendIcon</name>
        <reimplements refid="classQCPAbstractPlottable_1a71c259f4f96533d12df152c446b17425">drawLegendIcon</reimplements>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2594" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a476d2cef0373af31edf72ba2ee9770c7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQCPRange" kindref="compound">QCPRange</ref></type>
        <definition>virtual QCPRange QCPGraph::getKeyRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain=sdBoth) const </argsstring>
        <name>getKeyRange</name>
        <reimplements refid="classQCPAbstractPlottable_1a773e364928578909df1b33c8ad886688">getKeyRange</reimplements>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
          <defval><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2595" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a086d5320829d594bbc679cfba605f0a6" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQCPRange" kindref="compound">QCPRange</ref></type>
        <definition>virtual QCPRange QCPGraph::getValueRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain=sdBoth) const </argsstring>
        <name>getValueRange</name>
        <reimplements refid="classQCPAbstractPlottable_1a2e7d732592d8800000851ff51d5c384f">getValueRange</reimplements>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
          <defval><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2596" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a937f61fa71042dc48e44fe290015fd1b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQCPRange" kindref="compound">QCPRange</ref></type>
        <definition>virtual QCPRange QCPGraph::getKeyRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain, bool includeErrors) const </argsstring>
        <name>getKeyRange</name>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeErrors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2597" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1acacb0483faee6acc943ea4198aec5022" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQCPRange" kindref="compound">QCPRange</ref></type>
        <definition>virtual QCPRange QCPGraph::getValueRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain, bool includeErrors) const </argsstring>
        <name>getValueRange</name>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeErrors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2598" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a2ac1cbb66fc2a29f1d7eadabd78cedd3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPGraph::drawFill</definition>
        <argsstring>(QCPPainter *painter, QVector&lt; QPointF &gt; *lineData) const </argsstring>
        <name>drawFill</name>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2601" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a958d1db4d3d087ca318b37523c854c8d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPGraph::drawScatterPlot</definition>
        <argsstring>(QCPPainter *painter, QVector&lt; QCPData &gt; *scatterData) const </argsstring>
        <name>drawScatterPlot</name>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="classQCPData" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2602" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a268eccfce0f9b77c1cfa22de02ecd07c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPGraph::drawLinePlot</definition>
        <argsstring>(QCPPainter *painter, QVector&lt; QPointF &gt; *lineData) const </argsstring>
        <name>drawLinePlot</name>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2603" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a90f0241f3c429c4e4d442e4f57e1c37a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPGraph::drawImpulsePlot</definition>
        <argsstring>(QCPPainter *painter, QVector&lt; QPointF &gt; *lineData) const </argsstring>
        <name>drawImpulsePlot</name>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2604" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ab420b46ba638dc3252439fe16687b244" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getPreparedData</definition>
        <argsstring>(QVector&lt; QCPData &gt; *lineData, QVector&lt; QCPData &gt; *scatterData) const </argsstring>
        <name>getPreparedData</name>
        <param>
          <type>QVector&lt; <ref refid="classQCPData" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>lineData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="classQCPData" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2607" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a466c661e015188971c862031af946693" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getPlotData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *lineData, QVector&lt; QCPData &gt; *scatterData) const </argsstring>
        <name>getPlotData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="classQCPData" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2608" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a45c4214b59ea11aa6d8d112bdc3b0e03" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getScatterPlotData</definition>
        <argsstring>(QVector&lt; QCPData &gt; *scatterData) const </argsstring>
        <name>getScatterPlotData</name>
        <param>
          <type>QVector&lt; <ref refid="classQCPData" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2609" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ae3d82ffd0c9a883482aabf47b0e6b5ee" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getLinePlotData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *linePixelData, QVector&lt; QCPData &gt; *scatterData) const </argsstring>
        <name>getLinePlotData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>linePixelData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="classQCPData" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2610" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a609cf4a78045b4d2a679bdff7623847e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getStepLeftPlotData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *linePixelData, QVector&lt; QCPData &gt; *scatterData) const </argsstring>
        <name>getStepLeftPlotData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>linePixelData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="classQCPData" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2611" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a3b9b8c8dc7a6fd9be6e253c25ee31809" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getStepRightPlotData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *linePixelData, QVector&lt; QCPData &gt; *scatterData) const </argsstring>
        <name>getStepRightPlotData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>linePixelData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="classQCPData" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2612" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ad3713e7d8eb85a0afc34a81a5db5cd27" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getStepCenterPlotData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *linePixelData, QVector&lt; QCPData &gt; *scatterData) const </argsstring>
        <name>getStepCenterPlotData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>linePixelData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="classQCPData" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2613" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a1ca2b0762505767f116892609fb02062" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getImpulsePlotData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *linePixelData, QVector&lt; QCPData &gt; *scatterData) const </argsstring>
        <name>getImpulsePlotData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>linePixelData</declname>
        </param>
        <param>
          <type>QVector&lt; <ref refid="classQCPData" kindref="compound">QCPData</ref> &gt; *</type>
          <declname>scatterData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2614" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a4df6807066ce877705e999773e7ffbc4" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::drawError</definition>
        <argsstring>(QCPPainter *painter, double x, double y, const QCPData &amp;data) const </argsstring>
        <name>drawError</name>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="classQCPData" kindref="compound">QCPData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2615" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a6a317cb14a83dae0841c7041a63d6d9d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::getVisibleDataBounds</definition>
        <argsstring>(QCPDataMap::const_iterator &amp;lower, QCPDataMap::const_iterator &amp;upper) const </argsstring>
        <name>getVisibleDataBounds</name>
        <param>
          <type>QCPDataMap::const_iterator &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>QCPDataMap::const_iterator &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2616" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a13f6a3aa60227e03ab1f7aa8eec6589f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPGraph::countDataInBounds</definition>
        <argsstring>(const QCPDataMap::const_iterator &amp;lower, const QCPDataMap::const_iterator &amp;upper, int maxCount) const </argsstring>
        <name>countDataInBounds</name>
        <param>
          <type>const QCPDataMap::const_iterator &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>const QCPDataMap::const_iterator &amp;</type>
          <declname>upper</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2617" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a5fa7884620d7c54b81dfbd255d97b636" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::addFillBasePoints</definition>
        <argsstring>(QVector&lt; QPointF &gt; *lineData) const </argsstring>
        <name>addFillBasePoints</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2618" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1ad31b49a90e91e538fd9caf011c913a68" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPGraph::removeFillBasePoints</definition>
        <argsstring>(QVector&lt; QPointF &gt; *lineData) const </argsstring>
        <name>removeFillBasePoints</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2619" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a41f982e8ceaefe6a53eb7432f26d64b6" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF QCPGraph::lowerFillBasePoint</definition>
        <argsstring>(double lowerKey) const </argsstring>
        <name>lowerFillBasePoint</name>
        <param>
          <type>double</type>
          <declname>lowerKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2620" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a363d066c179e0f46cc93c12bafb0bfba" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF QCPGraph::upperFillBasePoint</definition>
        <argsstring>(double upperKey) const </argsstring>
        <name>upperFillBasePoint</name>
        <param>
          <type>double</type>
          <declname>upperKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2621" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a0374b7268e35cab9802a6be2b5d726d7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const QPolygonF</type>
        <definition>const QPolygonF QCPGraph::getChannelFillPolygon</definition>
        <argsstring>(const QVector&lt; QPointF &gt; *lineData) const </argsstring>
        <name>getChannelFillPolygon</name>
        <param>
          <type>const QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2622" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a6f4e9461d5925be9228fc4760249a04f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPGraph::findIndexBelowX</definition>
        <argsstring>(const QVector&lt; QPointF &gt; *data, double x) const </argsstring>
        <name>findIndexBelowX</name>
        <param>
          <type>const QVector&lt; QPointF &gt; *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2623" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1abab2a75b5e63630432bdd1f3b57f07fa" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPGraph::findIndexAboveX</definition>
        <argsstring>(const QVector&lt; QPointF &gt; *data, double x) const </argsstring>
        <name>findIndexAboveX</name>
        <param>
          <type>const QVector&lt; QPointF &gt; *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2624" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1a6c4d556de3d1e02f548401001f72c6ff" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPGraph::findIndexBelowY</definition>
        <argsstring>(const QVector&lt; QPointF &gt; *data, double y) const </argsstring>
        <name>findIndexBelowY</name>
        <param>
          <type>const QVector&lt; QPointF &gt; *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2625" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1adf50243f1df203883a2187089734bfcb" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPGraph::findIndexAboveY</definition>
        <argsstring>(const QVector&lt; QPointF &gt; *data, double y) const </argsstring>
        <name>findIndexAboveY</name>
        <param>
          <type>const QVector&lt; QPointF &gt; *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2626" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPGraph_1af93762a12a481a7edb4b3dd9e330dff1" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QCPGraph::pointDistance</definition>
        <argsstring>(const QPointF &amp;pixelPoint) const </argsstring>
        <name>pointDistance</name>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pixelPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2627" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="332">
        <label>QObject</label>
      </node>
      <node id="330">
        <label>QCPAbstractPlottable</label>
        <link refid="classQCPAbstractPlottable"/>
        <childnode refid="331" relation="public-inheritance">
        </childnode>
      </node>
      <node id="329">
        <label>QCPGraph</label>
        <link refid="classQCPGraph"/>
        <childnode refid="330" relation="public-inheritance">
        </childnode>
      </node>
      <node id="331">
        <label>QCPLayerable</label>
        <link refid="classQCPLayerable"/>
        <childnode refid="332" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="349">
        <label>QCPLayoutInset</label>
        <link refid="classQCPLayoutInset"/>
        <childnode refid="341" relation="public-inheritance">
        </childnode>
      </node>
      <node id="342">
        <label>QCPLayoutElement</label>
        <link refid="classQCPLayoutElement"/>
        <childnode refid="335" relation="public-inheritance">
        </childnode>
        <childnode refid="341" relation="usage">
          <edgelabel>mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="336">
        <label>QObject</label>
      </node>
      <node id="344">
        <label>QCPRange</label>
        <link refid="classQCPRange"/>
      </node>
      <node id="350">
        <label>QCPLegend</label>
        <link refid="classQCPLegend"/>
        <childnode refid="340" relation="public-inheritance">
        </childnode>
      </node>
      <node id="334">
        <label>QCPAbstractPlottable</label>
        <link refid="classQCPAbstractPlottable"/>
        <childnode refid="335" relation="public-inheritance">
        </childnode>
      </node>
      <node id="346">
        <label>QCPLineEnding</label>
        <link refid="classQCPLineEnding"/>
      </node>
      <node id="341">
        <label>QCPLayout</label>
        <link refid="classQCPLayout"/>
        <childnode refid="342" relation="public-inheritance">
        </childnode>
      </node>
      <node id="347">
        <label>QCPGrid</label>
        <link refid="classQCPGrid"/>
        <childnode refid="335" relation="public-inheritance">
        </childnode>
        <childnode refid="343" relation="usage">
          <edgelabel>mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="345">
        <label>QCPAxisPainterPrivate</label>
        <link refid="classQCPAxisPainterPrivate"/>
        <childnode refid="346" relation="usage">
          <edgelabel>lowerEnding</edgelabel>
          <edgelabel>upperEnding</edgelabel>
        </childnode>
        <childnode refid="338" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="333">
        <label>QCPGraph</label>
        <link refid="classQCPGraph"/>
        <childnode refid="334" relation="public-inheritance">
        </childnode>
        <childnode refid="351" relation="usage">
          <edgelabel>mScatterStyle</edgelabel>
        </childnode>
      </node>
      <node id="339">
        <label>QWidget</label>
      </node>
      <node id="337">
        <label>QCPLayer</label>
        <link refid="classQCPLayer"/>
        <childnode refid="336" relation="public-inheritance">
        </childnode>
        <childnode refid="338" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="340">
        <label>QCPLayoutGrid</label>
        <link refid="classQCPLayoutGrid"/>
        <childnode refid="341" relation="public-inheritance">
        </childnode>
      </node>
      <node id="335">
        <label>QCPLayerable</label>
        <link refid="classQCPLayerable"/>
        <childnode refid="336" relation="public-inheritance">
        </childnode>
        <childnode refid="337" relation="usage">
          <edgelabel>mLayer</edgelabel>
        </childnode>
        <childnode refid="338" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="343">
        <label>QCPAxis</label>
        <link refid="classQCPAxis"/>
        <childnode refid="335" relation="public-inheritance">
        </childnode>
        <childnode refid="344" relation="usage">
          <edgelabel>mRange</edgelabel>
        </childnode>
        <childnode refid="345" relation="usage">
          <edgelabel>mAxisPainter</edgelabel>
        </childnode>
        <childnode refid="347" relation="usage">
          <edgelabel>mGrid</edgelabel>
        </childnode>
        <childnode refid="348" relation="usage">
          <edgelabel>mAxisRect</edgelabel>
        </childnode>
      </node>
      <node id="348">
        <label>QCPAxisRect</label>
        <link refid="classQCPAxisRect"/>
        <childnode refid="342" relation="public-inheritance">
        </childnode>
        <childnode refid="349" relation="usage">
          <edgelabel>mInsetLayout</edgelabel>
        </childnode>
        <childnode refid="344" relation="usage">
          <edgelabel>mDragStartVertRange</edgelabel>
          <edgelabel>mDragStartHorzRange</edgelabel>
        </childnode>
      </node>
      <node id="338">
        <label>QCustomPlot</label>
        <link refid="classQCustomPlot"/>
        <childnode refid="339" relation="public-inheritance">
        </childnode>
        <childnode refid="337" relation="usage">
          <edgelabel>mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="340" relation="usage">
          <edgelabel>mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="343" relation="usage">
          <edgelabel>yAxis2</edgelabel>
          <edgelabel>xAxis2</edgelabel>
          <edgelabel>xAxis</edgelabel>
          <edgelabel>yAxis</edgelabel>
        </childnode>
        <childnode refid="350" relation="usage">
          <edgelabel>legend</edgelabel>
        </childnode>
      </node>
      <node id="351">
        <label>QCPScatterStyle</label>
        <link refid="classQCPScatterStyle"/>
      </node>
    </collaborationgraph>
    <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2491" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2490" bodyend="2631"/>
    <listofallmembers>
      <member refid="classQCPGraph_1ad3bea28ec910eedfa9b788928d610de0" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>adaptiveSampling</name></member>
      <member refid="classQCPGraph_1aa5c6181d84db72ce4dbe9dc15a34ef4f" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>addData</name></member>
      <member refid="classQCPGraph_1a80cc91e1e0ef77eb50afc5b366d0efd9" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>addData</name></member>
      <member refid="classQCPGraph_1a0bf98b1972286cfb7b1c4b7dd6ae2012" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>addData</name></member>
      <member refid="classQCPGraph_1ab6da6377541fe80d892a9893a92db9c6" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>addData</name></member>
      <member refid="classQCPGraph_1a5fa7884620d7c54b81dfbd255d97b636" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>addFillBasePoints</name></member>
      <member refid="classQCPAbstractPlottable_1a2e55c6f6cf358f002c626a3a26be4b81" prot="public" virt="virtual"><scope>QCPGraph</scope><name>addToLegend</name></member>
      <member refid="classQCPLayerable_1aef5cb4aa899ed9dc9384fd614560291e" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>antialiased</name></member>
      <member refid="classQCPAbstractPlottable_1a630cfb27ff99ab4373b09631748fcf4a" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>antialiasedErrorBars</name></member>
      <member refid="classQCPAbstractPlottable_1a68d1c358db03faae376ec47c589abf27" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>antialiasedFill</name></member>
      <member refid="classQCPAbstractPlottable_1aefc379bcc011660a5371ecc6088a97eb" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>antialiasedScatters</name></member>
      <member refid="classQCPLayerable_1a62bd552d1a45aa9accb24b310542279e" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>applyAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1a76e9d6cc7972dc1528f526d163766aca" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1af687bfe6160255960558eb71f1f81e73" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>applyErrorBarsAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1ac08a480155895e674dbfe5a5670e0ff3" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>applyFillAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1a753272ee225a62827e90c3e1e78de4b1" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>applyScattersAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1aa74cdceb9c7286ef116fbfa58e0326e7" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>brush</name></member>
      <member refid="classQCPGraph_1a5369f23863e04a6164f8b66d49fd18f4" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>channelFillGraph</name></member>
      <member refid="classQCPGraph_1a1d199d5a0b18c24ddc1ddfd2ba00a67b" prot="public" virt="virtual"><scope>QCPGraph</scope><name>clearData</name></member>
      <member refid="classQCPAbstractPlottable_1acc09ccca4eb6e2a6a739411f9f742c54" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>clipRect</name></member>
      <member refid="classQCPAbstractPlottable_1ade710a776104b14c1c835168ce1bfc5c" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>coordsToPixels</name></member>
      <member refid="classQCPAbstractPlottable_1a9fd1c9df8391781f05b0be22fbe91e13" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>coordsToPixels</name></member>
      <member refid="classQCPGraph_1a13f6a3aa60227e03ab1f7aa8eec6589f" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>countDataInBounds</name></member>
      <member refid="classQCPGraph_1a525b29295f9dcfcb569b99709673c2be" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>data</name></member>
      <member refid="classQCPAbstractPlottable_1a7dbc1dd1aeccb7531089c780fc373d14" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>deselectEvent</name></member>
      <member refid="classQCPAbstractPlottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>distSqrToLine</name></member>
      <member refid="classQCPGraph_1af12398626b646cae525d1d5bb8eb7a76" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>draw</name></member>
      <member refid="classQCPGraph_1a4df6807066ce877705e999773e7ffbc4" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>drawError</name></member>
      <member refid="classQCPGraph_1a2ac1cbb66fc2a29f1d7eadabd78cedd3" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>drawFill</name></member>
      <member refid="classQCPGraph_1a90f0241f3c429c4e4d442e4f57e1c37a" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>drawImpulsePlot</name></member>
      <member refid="classQCPGraph_1a49561e6e4e643e7cf09267be46783a8a" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>drawLegendIcon</name></member>
      <member refid="classQCPGraph_1a268eccfce0f9b77c1cfa22de02ecd07c" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>drawLinePlot</name></member>
      <member refid="classQCPGraph_1a958d1db4d3d087ca318b37523c854c8d" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>drawScatterPlot</name></member>
      <member refid="classQCPGraph_1ae31efdcbc6ba3d73a7aeb83c774f958a" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>errorBarSize</name></member>
      <member refid="classQCPGraph_1a04dbc050ff04561658ab1e7f3df37a01" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>errorBarSkipSymbol</name></member>
      <member refid="classQCPGraph_1a83455e01093bb899f3b59d4a6fdcd57b" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>errorPen</name></member>
      <member refid="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6af" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>ErrorType</name></member>
      <member refid="classQCPGraph_1a250bcdf78abac87bc6d46ee6fd99a92d" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>errorType</name></member>
      <member refid="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6afa761cb7d61670c1e2efecccd8974409ab" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>etBoth</name></member>
      <member refid="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6afa2a5d89cd76fb8b6b18d71b8f6f6c0f43" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>etKey</name></member>
      <member refid="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6afaeae745e7cc1766bb8546e35d4b76a711" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>etNone</name></member>
      <member refid="classQCPGraph_1ad23b514404bd2cb3216f57c90904d6afa147022ccdc49f6bd48f904cb4f61872e" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>etValue</name></member>
      <member refid="classQCPGraph_1abab2a75b5e63630432bdd1f3b57f07fa" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>findIndexAboveX</name></member>
      <member refid="classQCPGraph_1adf50243f1df203883a2187089734bfcb" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>findIndexAboveY</name></member>
      <member refid="classQCPGraph_1a6f4e9461d5925be9228fc4760249a04f" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>findIndexBelowX</name></member>
      <member refid="classQCPGraph_1a6c4d556de3d1e02f548401001f72c6ff" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>findIndexBelowY</name></member>
      <member refid="classQCPGraph_1a0374b7268e35cab9802a6be2b5d726d7" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getChannelFillPolygon</name></member>
      <member refid="classQCPGraph_1a1ca2b0762505767f116892609fb02062" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getImpulsePlotData</name></member>
      <member refid="classQCPGraph_1a476d2cef0373af31edf72ba2ee9770c7" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>getKeyRange</name></member>
      <member refid="classQCPGraph_1a937f61fa71042dc48e44fe290015fd1b" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>getKeyRange</name></member>
      <member refid="classQCPGraph_1ae3d82ffd0c9a883482aabf47b0e6b5ee" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getLinePlotData</name></member>
      <member refid="classQCPGraph_1a466c661e015188971c862031af946693" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getPlotData</name></member>
      <member refid="classQCPGraph_1ab420b46ba638dc3252439fe16687b244" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getPreparedData</name></member>
      <member refid="classQCPGraph_1a45c4214b59ea11aa6d8d112bdc3b0e03" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getScatterPlotData</name></member>
      <member refid="classQCPGraph_1ad3713e7d8eb85a0afc34a81a5db5cd27" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getStepCenterPlotData</name></member>
      <member refid="classQCPGraph_1a609cf4a78045b4d2a679bdff7623847e" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getStepLeftPlotData</name></member>
      <member refid="classQCPGraph_1a3b9b8c8dc7a6fd9be6e253c25ee31809" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getStepRightPlotData</name></member>
      <member refid="classQCPGraph_1a086d5320829d594bbc679cfba605f0a6" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>getValueRange</name></member>
      <member refid="classQCPGraph_1acacb0483faee6acc943ea4198aec5022" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>getValueRange</name></member>
      <member refid="classQCPGraph_1a6a317cb14a83dae0841c7041a63d6d9d" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>getVisibleDataBounds</name></member>
      <member refid="classQCPLayerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>initializeParentPlot</name></member>
      <member refid="classQCPAbstractPlottable_1a72c7a09c22963f2c943f07112b311103" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>keyAxis</name></member>
      <member refid="classQCPLayerable_1aea67e8c19145e70d68c286a36f6b8300" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>layer</name></member>
      <member refid="classQCPLayerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>layerChanged</name></member>
      <member refid="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>LineStyle</name></member>
      <member refid="classQCPGraph_1ad6db8d31abeac256a285fc68d6b9b9be" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lineStyle</name></member>
      <member refid="classQCPGraph_1a41f982e8ceaefe6a53eb7432f26d64b6" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>lowerFillBasePoint</name></member>
      <member refid="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859aa3b358b4ae7cca94aceeb8e529c12ebb" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lsImpulse</name></member>
      <member refid="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859a3c42a27b15aa3c92d399082fad8b7515" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lsLine</name></member>
      <member refid="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859aea9591b933733cc7b20786b71e60fa04" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lsNone</name></member>
      <member refid="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859a5adf7b04da215a40a764c21294ea7366" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lsStepCenter</name></member>
      <member refid="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859ae10568bda57836487d9dec5eba1d6c6e" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lsStepLeft</name></member>
      <member refid="classQCPGraph_1ad60175cd9b5cac937c5ee685c32c0859a9c37951f7d11aa070100fd16f2935c9e" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>lsStepRight</name></member>
      <member refid="classQCPGraph_1aa951e78aeba714cf443be6da2e52502e" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mAdaptiveSampling</name></member>
      <member refid="classQCPAbstractPlottable_1ae74c123832da180c17e22203e748d9b7" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mainBrush</name></member>
      <member refid="classQCPAbstractPlottable_1a19276ed2382a3a06464417b8788b1451" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mainPen</name></member>
      <member refid="classQCPLayerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mAntialiased</name></member>
      <member refid="classQCPAbstractPlottable_1ad48660b2bd301576e92fb033d8f455ea" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mAntialiasedErrorBars</name></member>
      <member refid="classQCPAbstractPlottable_1a152ac765bedf927fb240545d11d453ea" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mAntialiasedFill</name></member>
      <member refid="classQCPAbstractPlottable_1aa115755e525a8e3a86dc683f9cab755b" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mAntialiasedScatters</name></member>
      <member refid="classQCPAbstractPlottable_1a33f00674c0161c13315ab9da0895418e" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mBrush</name></member>
      <member refid="classQCPGraph_1a2f1777c7accf8244fc640c33f0b04577" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mChannelFillGraph</name></member>
      <member refid="classQCPGraph_1a8457c840f69a0ac49f61d30a509c5d08" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mData</name></member>
      <member refid="classQCPGraph_1a7b51c8d09510f9d195b5e765ccbcf05b" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mErrorBarSize</name></member>
      <member refid="classQCPGraph_1acf631d7dbd1055a69ab3b63094868557" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mErrorBarSkipSymbol</name></member>
      <member refid="classQCPGraph_1aa35681a24165c2831301091a87b662ce" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mErrorPen</name></member>
      <member refid="classQCPGraph_1a29e64273db201aeadebc61c870720a36" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mErrorType</name></member>
      <member refid="classQCPAbstractPlottable_1a426f42e254d0f8ce5436a868c61a6827" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mKeyAxis</name></member>
      <member refid="classQCPLayerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mLayer</name></member>
      <member refid="classQCPGraph_1a8604fd98402035a63375849f7341ee25" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mLineStyle</name></member>
      <member refid="classQCPAbstractPlottable_1ac29ffef424e2488675930de18cde612a" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mName</name></member>
      <member refid="classQCPLayerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>moveToLayer</name></member>
      <member refid="classQCPLayerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mParentLayerable</name></member>
      <member refid="classQCPLayerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mParentPlot</name></member>
      <member refid="classQCPAbstractPlottable_1a67bc0622fd1b9fa14e54c14922dcec66" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mPen</name></member>
      <member refid="classQCPGraph_1a4aa36241f166ccd1f75fc8f24e4a3247" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mScatterStyle</name></member>
      <member refid="classQCPAbstractPlottable_1aceee52342c8e75727abcbd164986fdcb" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mSelectable</name></member>
      <member refid="classQCPAbstractPlottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mSelected</name></member>
      <member refid="classQCPAbstractPlottable_1aea3c0da30c7a8be23ad5f2d9bca36762" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mSelectedBrush</name></member>
      <member refid="classQCPAbstractPlottable_1a10619472f5d5e10e9519a599f1cf5576" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mSelectedPen</name></member>
      <member refid="classQCPAbstractPlottable_1a2901452ca4aea911a1827717934a4bda" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mValueAxis</name></member>
      <member refid="classQCPLayerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>mVisible</name></member>
      <member refid="classQCPAbstractPlottable_1a1affc1972938e4364a9325e4e4e4dcea" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>name</name></member>
      <member refid="classQCPLayerable_1aecaafc76ad8146d2a4d54837c5eada46" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>parentLayerable</name></member>
      <member refid="classQCPLayerable_1ab7e0e94461566093d36ffc0f5312b109" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>parentPlot</name></member>
      <member refid="classQCPLayerable_1ac504c8a0075c2fefbf941c4e599d218c" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>parentPlotInitialized</name></member>
      <member refid="classQCPAbstractPlottable_1a41d060007cc6b3037c9c04d22d0c0398" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>pen</name></member>
      <member refid="classQCPAbstractPlottable_1a10408828446e9e0681c46d65120f382e" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>pixelsToCoords</name></member>
      <member refid="classQCPAbstractPlottable_1a3e2c361cfcdfd5d803ada4d333a07e15" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>pixelsToCoords</name></member>
      <member refid="classQCPGraph_1af93762a12a481a7edb4b3dd9e330dff1" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>pointDistance</name></member>
      <member refid="classQCPAbstractPlottable_1af78a036e40db6f53a31abadc5323715a" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>QCPAbstractPlottable</name></member>
      <member refid="classQCPGraph_1a0393a38cf7183cbf46348eb6cf9a5a6c" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>QCPGraph</name></member>
      <member refid="classQCPLayerable_1a74c0fa237f29bf0e49565013fc5d1ec0" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>QCPLayerable</name></member>
      <member refid="classQCPGraph_1a8429035e7adfbd7f05805a6530ad5e3b" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>QCPLegend</name></member>
      <member refid="classQCPGraph_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>QCustomPlot</name></member>
      <member refid="classQCPLayerable_1a30809f7455e9794bca7b6c737622fa63" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>realVisibility</name></member>
      <member refid="classQCPGraph_1a4a0fde50b7db9db0a85b5c5b6b10098f" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>removeData</name></member>
      <member refid="classQCPGraph_1a4a706020b4318f118381648ef18aca3f" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>removeData</name></member>
      <member refid="classQCPGraph_1ae42d645ef617cfc75fc0df58e62c522a" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>removeDataAfter</name></member>
      <member refid="classQCPGraph_1a9fe0b3e54e8c7b61319bd03337e21e99" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>removeDataBefore</name></member>
      <member refid="classQCPGraph_1ad31b49a90e91e538fd9caf011c913a68" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>removeFillBasePoints</name></member>
      <member refid="classQCPAbstractPlottable_1a679b272bfa2375796844f136c6bb209f" prot="public" virt="virtual"><scope>QCPGraph</scope><name>removeFromLegend</name></member>
      <member refid="classQCPGraph_1aa35b75b9032800d783df749c8a004ee9" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>rescaleAxes</name></member>
      <member refid="classQCPAbstractPlottable_1a7e8fc3be43c27ccacd70a7bf9d74a5cd" prot="public" virt="non-virtual" ambiguityscope="QCPAbstractPlottable::"><scope>QCPGraph</scope><name>rescaleAxes</name></member>
      <member refid="classQCPGraph_1a2108a729046b0ab6e0516afb249dab13" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>rescaleKeyAxis</name></member>
      <member refid="classQCPAbstractPlottable_1a1acecfcca3e7fcda00fcbaa3c886386f" prot="public" virt="non-virtual" ambiguityscope="QCPAbstractPlottable::"><scope>QCPGraph</scope><name>rescaleKeyAxis</name></member>
      <member refid="classQCPGraph_1a2ba0e1df416486d7e74299ef8cf68bba" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>rescaleValueAxis</name></member>
      <member refid="classQCPAbstractPlottable_1abfd0805eb1d955c0111a990246658324" prot="public" virt="non-virtual" ambiguityscope="QCPAbstractPlottable::"><scope>QCPGraph</scope><name>rescaleValueAxis</name></member>
      <member refid="classQCPGraph_1ae0227c79f4e42a350c2c99fb2fb879db" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>scatterStyle</name></member>
      <member refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>sdBoth</name></member>
      <member refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>sdNegative</name></member>
      <member refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>sdPositive</name></member>
      <member refid="classQCPAbstractPlottable_1af895574da1ec0d050711b6c9deda296a" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>selectable</name></member>
      <member refid="classQCPAbstractPlottable_1a0059caa3f3581f3959660fef8cbb71c4" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>selectableChanged</name></member>
      <member refid="classQCPAbstractPlottable_1ab901903adcb0e29467d63de72340ab29" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>selected</name></member>
      <member refid="classQCPAbstractPlottable_1a403745791879916431adc872b49207e5" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>selectedBrush</name></member>
      <member refid="classQCPAbstractPlottable_1a006065572c5add883a944ea4cda699f3" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>selectedPen</name></member>
      <member refid="classQCPAbstractPlottable_1af16359a3af92af8c960470ad56eb7089" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>selectEvent</name></member>
      <member refid="classQCPAbstractPlottable_1a316cf851abb3e690d35a9275bf2c770d" prot="protected" virt="virtual"><scope>QCPGraph</scope><name>selectionCategory</name></member>
      <member refid="classQCPAbstractPlottable_1a3af66432b1dca93b28e00e78a8c7c1d9" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>selectionChanged</name></member>
      <member refid="classQCPGraph_1a753acc1154d30a3574ed28f366acae25" prot="public" virt="virtual"><scope>QCPGraph</scope><name>selectTest</name></member>
      <member refid="classQCPGraph_1ab468cd600160f327836aa0644291e64c" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setAdaptiveSampling</name></member>
      <member refid="classQCPLayerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setAntialiased</name></member>
      <member refid="classQCPAbstractPlottable_1a757beb744b96cf1855cca5ab9d3ecf52" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setAntialiasedErrorBars</name></member>
      <member refid="classQCPAbstractPlottable_1a089d6b5577120239b55c39ed27c39536" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setAntialiasedFill</name></member>
      <member refid="classQCPAbstractPlottable_1a2f03f067ede2ed4da6f7d0e4777a3f02" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setAntialiasedScatters</name></member>
      <member refid="classQCPAbstractPlottable_1a7a4b92144dca6453a1f0f210e27edc74" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setBrush</name></member>
      <member refid="classQCPGraph_1a2d03156df1b64037a2e36cfa50351ca3" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setChannelFillGraph</name></member>
      <member refid="classQCPGraph_1a1df2fd710545c8ba3b2c99a39a27bf8b" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setData</name></member>
      <member refid="classQCPGraph_1a4c55d8ac13bfa42c8c93747820891a76" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setData</name></member>
      <member refid="classQCPGraph_1a873fe46bdb20be5710428e474ade8908" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setDataBothError</name></member>
      <member refid="classQCPGraph_1abb75736ecdbf6e6a7501e1da64fb18cf" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setDataBothError</name></member>
      <member refid="classQCPGraph_1abce9f07c0d722bc3e4fa7bd73c7e5dfa" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setDataKeyError</name></member>
      <member refid="classQCPGraph_1ac15c749c5fedf740d5692c6fe67143b8" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setDataKeyError</name></member>
      <member refid="classQCPGraph_1acba6296eadcb36b93267628b8dae3de5" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setDataValueError</name></member>
      <member refid="classQCPGraph_1a3afbfd7222d739351c69387904776f93" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setDataValueError</name></member>
      <member refid="classQCPGraph_1a10f50c5495ce45ef559ec2066194a335" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setErrorBarSize</name></member>
      <member refid="classQCPGraph_1ab1c1ee03d8dd94676a564e5e5f11aac2" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setErrorBarSkipSymbol</name></member>
      <member refid="classQCPGraph_1abd4c7f81939e10776ea64603a704f22a" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setErrorPen</name></member>
      <member refid="classQCPGraph_1ac3614d799c3894f2bc646e99c7f73d38" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setErrorType</name></member>
      <member refid="classQCPAbstractPlottable_1a8524fa2994c63c0913ebd9bb2ffa3920" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setKeyAxis</name></member>
      <member refid="classQCPLayerable_1aea8c061ee8a1aa7ea88ee9ca9cbaa773" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setLayer</name></member>
      <member refid="classQCPLayerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setLayer</name></member>
      <member refid="classQCPGraph_1a513fecccff5b2a50ce53f665338c60ff" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setLineStyle</name></member>
      <member refid="classQCPAbstractPlottable_1ab79c7ba76bc7fa89a4b3580e12149f1f" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setName</name></member>
      <member refid="classQCPLayerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>setParentLayerable</name></member>
      <member refid="classQCPAbstractPlottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setPen</name></member>
      <member refid="classQCPGraph_1a12bd17a8ba21983163ec5d8f42a9fea5" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setScatterStyle</name></member>
      <member refid="classQCPAbstractPlottable_1a317de6ca6553ce1afdd7c75223e594ac" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setSelectable</name></member>
      <member refid="classQCPAbstractPlottable_1a26f0a07c80eb082429811ca572d5c8bd" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setSelected</name></member>
      <member refid="classQCPAbstractPlottable_1ae8c816874089f7a44001e8618e81a9dc" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setSelectedBrush</name></member>
      <member refid="classQCPAbstractPlottable_1a6911603cad23ab0469b108224517516f" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setSelectedPen</name></member>
      <member refid="classQCPAbstractPlottable_1a71626a07367e241ec62ad2c34baf21cb" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setValueAxis</name></member>
      <member refid="classQCPLayerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>setVisible</name></member>
      <member refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>SignDomain</name></member>
      <member refid="classQCPGraph_1a363d066c179e0f46cc93c12bafb0bfba" prot="protected" virt="non-virtual"><scope>QCPGraph</scope><name>upperFillBasePoint</name></member>
      <member refid="classQCPAbstractPlottable_1a3106f9d34d330a6097a8ec5905e5b519" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>valueAxis</name></member>
      <member refid="classQCPLayerable_1a10a3cc92e0fa63e4a929e61d34e275a7" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>visible</name></member>
      <member refid="classQCPGraph_1af83f8a67de5a3bad28c30421831e12eb" prot="public" virt="virtual"><scope>QCPGraph</scope><name>~QCPGraph</name></member>
      <member refid="classQCPLayerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="non-virtual"><scope>QCPGraph</scope><name>~QCPLayerable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
