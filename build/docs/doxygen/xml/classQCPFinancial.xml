<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classQCPFinancial" kind="class" prot="public">
    <compoundname>QCPFinancial</compoundname>
    <basecompoundref refid="classQCPAbstractPlottable" prot="public" virt="non-virtual">QCPAbstractPlottable</basecompoundref>
    <includes refid="qcustomplot_8h" local="no">qcustomplot.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQCPFinancial_1a0f800e21ee98d646dfc6f8f89d10ebfb" prot="public" static="no">
        <name>ChartStyle</name>
        <enumvalue id="classQCPFinancial_1a0f800e21ee98d646dfc6f8f89d10ebfba3a516016c9298d3e95dd82aa203c4390" prot="public">
          <name>csOhlc</name>
          <briefdescription>
<para>Open-High-Low-Close bar representation. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQCPFinancial_1a0f800e21ee98d646dfc6f8f89d10ebfbac803cbd39f26e3f206bcc7028679e62f" prot="public">
          <name>csCandlestick</name>
          <briefdescription>
<para>Candlestick representation. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the possible representations of OHLC data in the plot.</para><para><simplesect kind="see"><para><ref refid="classQCPFinancial_1a5a59175d36279d71596e64d7bb65596f" kindref="member">setChartStyle</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3163" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3163" bodyend="3165"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQCPFinancial_1a475f63587ca1077d8c30aaf2b71ae026" prot="protected" static="no" mutable="no">
        <type><ref refid="qcustomplot_8h_1a745c09823fae0974b50beca9bc3b3d7d" kindref="member">QCPFinancialDataMap</ref> *</type>
        <definition>QCPFinancialDataMap* QCPFinancial::mData</definition>
        <argsstring></argsstring>
        <name>mData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3212" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPFinancial_1ab65c2ce8d6354451870bb44b894c1e92" prot="protected" static="no" mutable="no">
        <type><ref refid="classQCPFinancial_1a0f800e21ee98d646dfc6f8f89d10ebfb" kindref="member">ChartStyle</ref></type>
        <definition>ChartStyle QCPFinancial::mChartStyle</definition>
        <argsstring></argsstring>
        <name>mChartStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3213" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPFinancial_1af630e5eb8485146b9c777e63fd1cf993" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double QCPFinancial::mWidth</definition>
        <argsstring></argsstring>
        <name>mWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3214" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPFinancial_1a6afe919190b884d9bac026cefcc8c0a8" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QCPFinancial::mTwoColored</definition>
        <argsstring></argsstring>
        <name>mTwoColored</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3215" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPFinancial_1ab7e6eed16260a2f88ca6bd940dffea79" prot="protected" static="no" mutable="no">
        <type>QBrush</type>
        <definition>QBrush QCPFinancial::mBrushPositive</definition>
        <argsstring></argsstring>
        <name>mBrushPositive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3216" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPFinancial_1acb0e31874b7a1deb56bd42e8ab3e68f2" prot="protected" static="no" mutable="no">
        <type>QBrush</type>
        <definition>QBrush QCPFinancial::mBrushNegative</definition>
        <argsstring></argsstring>
        <name>mBrushNegative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3216" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPFinancial_1aa6599186f417ba615caebb3f6c762bd8" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPFinancial::mPenPositive</definition>
        <argsstring></argsstring>
        <name>mPenPositive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3217" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPFinancial_1a263fbfefde2cc19c8d4024a8319c2bbb" prot="protected" static="no" mutable="no">
        <type>QPen</type>
        <definition>QPen QCPFinancial::mPenNegative</definition>
        <argsstring></argsstring>
        <name>mPenNegative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3217" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3217" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classQCPFinancial_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class QCustomPlot</definition>
        <argsstring></argsstring>
        <name>QCustomPlot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3232" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3232" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classQCPFinancial_1a8429035e7adfbd7f05805a6530ad5e3b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class QCPLegend</definition>
        <argsstring></argsstring>
        <name>QCPLegend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3233" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3233" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQCPFinancial_1a4702d5248feeb9d1ec6e3ce725b10b32" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPFinancial::QCPFinancial</definition>
        <argsstring>(QCPAxis *keyAxis, QCPAxis *valueAxis)</argsstring>
        <name>QCPFinancial</name>
        <param>
          <type><ref refid="classQCPAxis" kindref="compound">QCPAxis</ref> *</type>
          <declname>keyAxis</declname>
        </param>
        <param>
          <type><ref refid="classQCPAxis" kindref="compound">QCPAxis</ref> *</type>
          <declname>valueAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1af35f7b589b5d18ab8161df97b06617a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QCPFinancial::~QCPFinancial</definition>
        <argsstring>()</argsstring>
        <name>~QCPFinancial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a0c5c38acf492b52c04f26521117ac55f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="qcustomplot_8h_1a745c09823fae0974b50beca9bc3b3d7d" kindref="member">QCPFinancialDataMap</ref> *</type>
        <definition>QCPFinancialDataMap* QCPFinancial::data</definition>
        <argsstring>() const </argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3172" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3172" bodyend="3172"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a0888c9308cc5fcb4daa70184f9582412" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQCPFinancial_1a0f800e21ee98d646dfc6f8f89d10ebfb" kindref="member">ChartStyle</ref></type>
        <definition>ChartStyle QCPFinancial::chartStyle</definition>
        <argsstring>() const </argsstring>
        <name>chartStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3173" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3173" bodyend="3173"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a71ccaa04cdade0ec08a2117db6e4a4ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QCPFinancial::width</definition>
        <argsstring>() const </argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3174" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3174" bodyend="3174"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a2bab30fc4eee38a0da3a05846b8d7ac7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPFinancial::twoColored</definition>
        <argsstring>() const </argsstring>
        <name>twoColored</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3175" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3175" bodyend="3175"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1acb69536a334fae7fc31b2bfd4eca81f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QBrush</type>
        <definition>QBrush QCPFinancial::brushPositive</definition>
        <argsstring>() const </argsstring>
        <name>brushPositive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3176" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3176" bodyend="3176"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a91e09b31ce341c17b917e77fdc68d84e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QBrush</type>
        <definition>QBrush QCPFinancial::brushNegative</definition>
        <argsstring>() const </argsstring>
        <name>brushNegative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3177" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3177" bodyend="3177"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a544899bde79d06e17ccefcb9926d87ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPFinancial::penPositive</definition>
        <argsstring>() const </argsstring>
        <name>penPositive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3178" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3178" bodyend="3178"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a557fe911aa04f70c1734c8fa09994148" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>QPen</type>
        <definition>QPen QCPFinancial::penNegative</definition>
        <argsstring>() const </argsstring>
        <name>penNegative</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3179" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3179" bodyend="3179"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1adf12a86082f1e488df6a4e8603f8fd6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::setData</definition>
        <argsstring>(QCPFinancialDataMap *data, bool copy=false)</argsstring>
        <name>setData</name>
        <param>
          <type><ref refid="qcustomplot_8h_1a745c09823fae0974b50beca9bc3b3d7d" kindref="member">QCPFinancialDataMap</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a886881339d6447432af55adaad748c3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::setData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;open, const QVector&lt; double &gt; &amp;high, const QVector&lt; double &gt; &amp;low, const QVector&lt; double &gt; &amp;close)</argsstring>
        <name>setData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>open</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>high</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>low</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>close</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a5a59175d36279d71596e64d7bb65596f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::setChartStyle</definition>
        <argsstring>(ChartStyle style)</argsstring>
        <name>setChartStyle</name>
        <param>
          <type><ref refid="classQCPFinancial_1a0f800e21ee98d646dfc6f8f89d10ebfb" kindref="member">ChartStyle</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a99633f8bac86a61d534ae5eeb1a3068f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::setWidth</definition>
        <argsstring>(double width)</argsstring>
        <name>setWidth</name>
        <param>
          <type>double</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a138e44aac160a17a9676652e240c5f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::setTwoColored</definition>
        <argsstring>(bool twoColored)</argsstring>
        <name>setTwoColored</name>
        <param>
          <type>bool</type>
          <declname>twoColored</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a5ebff2b1764efd07cc44942e67821829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::setBrushPositive</definition>
        <argsstring>(const QBrush &amp;brush)</argsstring>
        <name>setBrushPositive</name>
        <param>
          <type>const QBrush &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a8bbdd87629f9144b3ef51af660c0961a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::setBrushNegative</definition>
        <argsstring>(const QBrush &amp;brush)</argsstring>
        <name>setBrushNegative</name>
        <param>
          <type>const QBrush &amp;</type>
          <declname>brush</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1ac58aa3adc7a35aab0088764b840683e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::setPenPositive</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setPenPositive</name>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1afe5c07e94ccea01a75b3a2476993c346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::setPenNegative</definition>
        <argsstring>(const QPen &amp;pen)</argsstring>
        <name>setPenNegative</name>
        <param>
          <type>const QPen &amp;</type>
          <declname>pen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a1a83396f97fcc68f2b7aa8d9782feffe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::addData</definition>
        <argsstring>(const QCPFinancialDataMap &amp;dataMap)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="qcustomplot_8h_1a745c09823fae0974b50beca9bc3b3d7d" kindref="member">QCPFinancialDataMap</ref> &amp;</type>
          <declname>dataMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a3b6144b48a6a8e63236fc5bf70d40c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::addData</definition>
        <argsstring>(const QCPFinancialData &amp;data)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="classQCPFinancialData" kindref="compound">QCPFinancialData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a688bbd052e00a02954ddb0068b378170" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::addData</definition>
        <argsstring>(double key, double open, double high, double low, double close)</argsstring>
        <name>addData</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>open</declname>
        </param>
        <param>
          <type>double</type>
          <declname>high</declname>
        </param>
        <param>
          <type>double</type>
          <declname>low</declname>
        </param>
        <param>
          <type>double</type>
          <declname>close</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1aa1abe3bdafb297497f09cdbdc4db3958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::addData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;open, const QVector&lt; double &gt; &amp;high, const QVector&lt; double &gt; &amp;low, const QVector&lt; double &gt; &amp;close)</argsstring>
        <name>addData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>open</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>high</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>low</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>close</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a097c0383c7c1e9042ca7f93cb439d15a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::removeDataBefore</definition>
        <argsstring>(double key)</argsstring>
        <name>removeDataBefore</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1aa0fcd357005288c833a230c7874825ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::removeDataAfter</definition>
        <argsstring>(double key)</argsstring>
        <name>removeDataAfter</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3199" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a048c741d3c8cc5709c2c44b759fdf27c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::removeData</definition>
        <argsstring>(double fromKey, double toKey)</argsstring>
        <name>removeData</name>
        <param>
          <type>double</type>
          <declname>fromKey</declname>
        </param>
        <param>
          <type>double</type>
          <declname>toKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1ae527d8a11290906b083d1ab598c380ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::removeData</definition>
        <argsstring>(double key)</argsstring>
        <name>removeData</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3201" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a2c174d0c2bd63239979352dc5173c8f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPFinancial::clearData</definition>
        <argsstring>()</argsstring>
        <name>clearData</name>
        <reimplements refid="classQCPAbstractPlottable_1a7d8e47f8558a0f224d3ae1e214475d14">clearData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1aeb9a48e2bcc87f41f2473d9c139a76da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double QCPFinancial::selectTest</definition>
        <argsstring>(const QPointF &amp;pos, bool onlySelectable, QVariant *details=0) const </argsstring>
        <name>selectTest</name>
        <reimplements refid="classQCPAbstractPlottable_1a38efe9641d972992a3d44204bc80ec1d">selectTest</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelectable</declname>
        </param>
        <param>
          <type>QVariant *</type>
          <declname>details</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3205" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classQCPFinancial_1aeb7431a9b4ab6490aaf518eca8f0deff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="qcustomplot_8h_1a745c09823fae0974b50beca9bc3b3d7d" kindref="member">QCPFinancialDataMap</ref></type>
        <definition>static QCPFinancialDataMap QCPFinancial::timeSeriesToOhlc</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;time, const QVector&lt; double &gt; &amp;value, double timeBinSize, double timeBinOffset=0)</argsstring>
        <name>timeSeriesToOhlc</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeBinSize</declname>
        </param>
        <param>
          <type>double</type>
          <declname>timeBinOffset</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3208" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQCPFinancial_1a98280e8d642e050902f823e8091b8261" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPFinancial::draw</definition>
        <argsstring>(QCPPainter *painter)</argsstring>
        <name>draw</name>
        <reimplements refid="classQCPAbstractPlottable_1acbab5e30dcd04fd302b4a5902ac2c482">draw</reimplements>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a56b338b4675ef741d67114a5bd00cef8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPFinancial::drawLegendIcon</definition>
        <argsstring>(QCPPainter *painter, const QRectF &amp;rect) const </argsstring>
        <name>drawLegendIcon</name>
        <reimplements refid="classQCPAbstractPlottable_1a71c259f4f96533d12df152c446b17425">drawLegendIcon</reimplements>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a44fb1f8334a82a642db3dcddb3041373" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQCPRange" kindref="compound">QCPRange</ref></type>
        <definition>virtual QCPRange QCPFinancial::getKeyRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain=sdBoth) const </argsstring>
        <name>getKeyRange</name>
        <reimplements refid="classQCPAbstractPlottable_1a773e364928578909df1b33c8ad886688">getKeyRange</reimplements>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
          <defval><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a476c29e538a45560bce5881325a36468" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQCPRange" kindref="compound">QCPRange</ref></type>
        <definition>virtual QCPRange QCPFinancial::getValueRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain=sdBoth) const </argsstring>
        <name>getValueRange</name>
        <reimplements refid="classQCPAbstractPlottable_1a2e7d732592d8800000851ff51d5c384f">getValueRange</reimplements>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
          <defval><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3223" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a3c3007a7434e29d042c77ccf4f497e66" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::drawOhlcPlot</definition>
        <argsstring>(QCPPainter *painter, const QCPFinancialDataMap::const_iterator &amp;begin, const QCPFinancialDataMap::const_iterator &amp;end)</argsstring>
        <name>drawOhlcPlot</name>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const QCPFinancialDataMap::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const QCPFinancialDataMap::const_iterator &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a71f5081da0e5ab9c40a488ad40cff122" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::drawCandlestickPlot</definition>
        <argsstring>(QCPPainter *painter, const QCPFinancialDataMap::const_iterator &amp;begin, const QCPFinancialDataMap::const_iterator &amp;end)</argsstring>
        <name>drawCandlestickPlot</name>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const QCPFinancialDataMap::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const QCPFinancialDataMap::const_iterator &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1a9c7d79351e728a67bfb6821c1d1bd6c0" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QCPFinancial::ohlcSelectTest</definition>
        <argsstring>(const QPointF &amp;pos, const QCPFinancialDataMap::const_iterator &amp;begin, const QCPFinancialDataMap::const_iterator &amp;end) const </argsstring>
        <name>ohlcSelectTest</name>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const QCPFinancialDataMap::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const QCPFinancialDataMap::const_iterator &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3228" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1abd0137244a17d5486a01ee442b083333" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QCPFinancial::candlestickSelectTest</definition>
        <argsstring>(const QPointF &amp;pos, const QCPFinancialDataMap::const_iterator &amp;begin, const QCPFinancialDataMap::const_iterator &amp;end) const </argsstring>
        <name>candlestickSelectTest</name>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const QCPFinancialDataMap::const_iterator &amp;</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const QCPFinancialDataMap::const_iterator &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3229" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPFinancial_1aca2edf9f19fae733cdb6bd4549019b84" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPFinancial::getVisibleDataBounds</definition>
        <argsstring>(QCPFinancialDataMap::const_iterator &amp;lower, QCPFinancialDataMap::const_iterator &amp;upper) const </argsstring>
        <name>getVisibleDataBounds</name>
        <param>
          <type>QCPFinancialDataMap::const_iterator &amp;</type>
          <declname>lower</declname>
        </param>
        <param>
          <type>QCPFinancialDataMap::const_iterator &amp;</type>
          <declname>upper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3230" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="305">
        <label>QCPFinancial</label>
        <link refid="classQCPFinancial"/>
        <childnode refid="306" relation="public-inheritance">
        </childnode>
      </node>
      <node id="308">
        <label>QObject</label>
      </node>
      <node id="306">
        <label>QCPAbstractPlottable</label>
        <link refid="classQCPAbstractPlottable"/>
        <childnode refid="307" relation="public-inheritance">
        </childnode>
      </node>
      <node id="307">
        <label>QCPLayerable</label>
        <link refid="classQCPLayerable"/>
        <childnode refid="308" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="325">
        <label>QCPLayoutInset</label>
        <link refid="classQCPLayoutInset"/>
        <childnode refid="317" relation="public-inheritance">
        </childnode>
      </node>
      <node id="318">
        <label>QCPLayoutElement</label>
        <link refid="classQCPLayoutElement"/>
        <childnode refid="311" relation="public-inheritance">
        </childnode>
        <childnode refid="317" relation="usage">
          <edgelabel>mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="309">
        <label>QCPFinancial</label>
        <link refid="classQCPFinancial"/>
        <childnode refid="310" relation="public-inheritance">
        </childnode>
      </node>
      <node id="312">
        <label>QObject</label>
      </node>
      <node id="320">
        <label>QCPRange</label>
        <link refid="classQCPRange"/>
      </node>
      <node id="326">
        <label>QCPLegend</label>
        <link refid="classQCPLegend"/>
        <childnode refid="316" relation="public-inheritance">
        </childnode>
      </node>
      <node id="310">
        <label>QCPAbstractPlottable</label>
        <link refid="classQCPAbstractPlottable"/>
        <childnode refid="311" relation="public-inheritance">
        </childnode>
      </node>
      <node id="322">
        <label>QCPLineEnding</label>
        <link refid="classQCPLineEnding"/>
      </node>
      <node id="317">
        <label>QCPLayout</label>
        <link refid="classQCPLayout"/>
        <childnode refid="318" relation="public-inheritance">
        </childnode>
      </node>
      <node id="323">
        <label>QCPGrid</label>
        <link refid="classQCPGrid"/>
        <childnode refid="311" relation="public-inheritance">
        </childnode>
        <childnode refid="319" relation="usage">
          <edgelabel>mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="321">
        <label>QCPAxisPainterPrivate</label>
        <link refid="classQCPAxisPainterPrivate"/>
        <childnode refid="322" relation="usage">
          <edgelabel>lowerEnding</edgelabel>
          <edgelabel>upperEnding</edgelabel>
        </childnode>
        <childnode refid="314" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="315">
        <label>QWidget</label>
      </node>
      <node id="313">
        <label>QCPLayer</label>
        <link refid="classQCPLayer"/>
        <childnode refid="312" relation="public-inheritance">
        </childnode>
        <childnode refid="314" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="316">
        <label>QCPLayoutGrid</label>
        <link refid="classQCPLayoutGrid"/>
        <childnode refid="317" relation="public-inheritance">
        </childnode>
      </node>
      <node id="311">
        <label>QCPLayerable</label>
        <link refid="classQCPLayerable"/>
        <childnode refid="312" relation="public-inheritance">
        </childnode>
        <childnode refid="313" relation="usage">
          <edgelabel>mLayer</edgelabel>
        </childnode>
        <childnode refid="314" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="319">
        <label>QCPAxis</label>
        <link refid="classQCPAxis"/>
        <childnode refid="311" relation="public-inheritance">
        </childnode>
        <childnode refid="320" relation="usage">
          <edgelabel>mRange</edgelabel>
        </childnode>
        <childnode refid="321" relation="usage">
          <edgelabel>mAxisPainter</edgelabel>
        </childnode>
        <childnode refid="323" relation="usage">
          <edgelabel>mGrid</edgelabel>
        </childnode>
        <childnode refid="324" relation="usage">
          <edgelabel>mAxisRect</edgelabel>
        </childnode>
      </node>
      <node id="324">
        <label>QCPAxisRect</label>
        <link refid="classQCPAxisRect"/>
        <childnode refid="318" relation="public-inheritance">
        </childnode>
        <childnode refid="325" relation="usage">
          <edgelabel>mInsetLayout</edgelabel>
        </childnode>
        <childnode refid="320" relation="usage">
          <edgelabel>mDragStartVertRange</edgelabel>
          <edgelabel>mDragStartHorzRange</edgelabel>
        </childnode>
      </node>
      <node id="314">
        <label>QCustomPlot</label>
        <link refid="classQCustomPlot"/>
        <childnode refid="315" relation="public-inheritance">
        </childnode>
        <childnode refid="313" relation="usage">
          <edgelabel>mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="316" relation="usage">
          <edgelabel>mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="319" relation="usage">
          <edgelabel>yAxis2</edgelabel>
          <edgelabel>xAxis2</edgelabel>
          <edgelabel>xAxis</edgelabel>
          <edgelabel>yAxis</edgelabel>
        </childnode>
        <childnode refid="326" relation="usage">
          <edgelabel>legend</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="3146" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="3145" bodyend="3234"/>
    <listofallmembers>
      <member refid="classQCPFinancial_1a1a83396f97fcc68f2b7aa8d9782feffe" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>addData</name></member>
      <member refid="classQCPFinancial_1a3b6144b48a6a8e63236fc5bf70d40c00" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>addData</name></member>
      <member refid="classQCPFinancial_1a688bbd052e00a02954ddb0068b378170" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>addData</name></member>
      <member refid="classQCPFinancial_1aa1abe3bdafb297497f09cdbdc4db3958" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>addData</name></member>
      <member refid="classQCPAbstractPlottable_1a2e55c6f6cf358f002c626a3a26be4b81" prot="public" virt="virtual"><scope>QCPFinancial</scope><name>addToLegend</name></member>
      <member refid="classQCPLayerable_1aef5cb4aa899ed9dc9384fd614560291e" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>antialiased</name></member>
      <member refid="classQCPAbstractPlottable_1a630cfb27ff99ab4373b09631748fcf4a" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>antialiasedErrorBars</name></member>
      <member refid="classQCPAbstractPlottable_1a68d1c358db03faae376ec47c589abf27" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>antialiasedFill</name></member>
      <member refid="classQCPAbstractPlottable_1aefc379bcc011660a5371ecc6088a97eb" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>antialiasedScatters</name></member>
      <member refid="classQCPLayerable_1a62bd552d1a45aa9accb24b310542279e" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>applyAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1a76e9d6cc7972dc1528f526d163766aca" prot="protected" virt="virtual"><scope>QCPFinancial</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1af687bfe6160255960558eb71f1f81e73" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>applyErrorBarsAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1ac08a480155895e674dbfe5a5670e0ff3" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>applyFillAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1a753272ee225a62827e90c3e1e78de4b1" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>applyScattersAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1aa74cdceb9c7286ef116fbfa58e0326e7" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>brush</name></member>
      <member refid="classQCPFinancial_1a91e09b31ce341c17b917e77fdc68d84e" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>brushNegative</name></member>
      <member refid="classQCPFinancial_1acb69536a334fae7fc31b2bfd4eca81f5" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>brushPositive</name></member>
      <member refid="classQCPFinancial_1abd0137244a17d5486a01ee442b083333" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>candlestickSelectTest</name></member>
      <member refid="classQCPFinancial_1a0888c9308cc5fcb4daa70184f9582412" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>chartStyle</name></member>
      <member refid="classQCPFinancial_1a0f800e21ee98d646dfc6f8f89d10ebfb" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>ChartStyle</name></member>
      <member refid="classQCPFinancial_1a2c174d0c2bd63239979352dc5173c8f0" prot="public" virt="virtual"><scope>QCPFinancial</scope><name>clearData</name></member>
      <member refid="classQCPAbstractPlottable_1acc09ccca4eb6e2a6a739411f9f742c54" prot="protected" virt="virtual"><scope>QCPFinancial</scope><name>clipRect</name></member>
      <member refid="classQCPAbstractPlottable_1ade710a776104b14c1c835168ce1bfc5c" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>coordsToPixels</name></member>
      <member refid="classQCPAbstractPlottable_1a9fd1c9df8391781f05b0be22fbe91e13" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>coordsToPixels</name></member>
      <member refid="classQCPFinancial_1a0f800e21ee98d646dfc6f8f89d10ebfbac803cbd39f26e3f206bcc7028679e62f" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>csCandlestick</name></member>
      <member refid="classQCPFinancial_1a0f800e21ee98d646dfc6f8f89d10ebfba3a516016c9298d3e95dd82aa203c4390" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>csOhlc</name></member>
      <member refid="classQCPFinancial_1a0c5c38acf492b52c04f26521117ac55f" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>data</name></member>
      <member refid="classQCPAbstractPlottable_1a7dbc1dd1aeccb7531089c780fc373d14" prot="protected" virt="virtual"><scope>QCPFinancial</scope><name>deselectEvent</name></member>
      <member refid="classQCPAbstractPlottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>distSqrToLine</name></member>
      <member refid="classQCPFinancial_1a98280e8d642e050902f823e8091b8261" prot="protected" virt="virtual"><scope>QCPFinancial</scope><name>draw</name></member>
      <member refid="classQCPFinancial_1a71f5081da0e5ab9c40a488ad40cff122" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>drawCandlestickPlot</name></member>
      <member refid="classQCPFinancial_1a56b338b4675ef741d67114a5bd00cef8" prot="protected" virt="virtual"><scope>QCPFinancial</scope><name>drawLegendIcon</name></member>
      <member refid="classQCPFinancial_1a3c3007a7434e29d042c77ccf4f497e66" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>drawOhlcPlot</name></member>
      <member refid="classQCPFinancial_1a44fb1f8334a82a642db3dcddb3041373" prot="protected" virt="virtual"><scope>QCPFinancial</scope><name>getKeyRange</name></member>
      <member refid="classQCPFinancial_1a476c29e538a45560bce5881325a36468" prot="protected" virt="virtual"><scope>QCPFinancial</scope><name>getValueRange</name></member>
      <member refid="classQCPFinancial_1aca2edf9f19fae733cdb6bd4549019b84" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>getVisibleDataBounds</name></member>
      <member refid="classQCPLayerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>initializeParentPlot</name></member>
      <member refid="classQCPAbstractPlottable_1a72c7a09c22963f2c943f07112b311103" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>keyAxis</name></member>
      <member refid="classQCPLayerable_1aea67e8c19145e70d68c286a36f6b8300" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>layer</name></member>
      <member refid="classQCPLayerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>layerChanged</name></member>
      <member refid="classQCPAbstractPlottable_1ae74c123832da180c17e22203e748d9b7" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mainBrush</name></member>
      <member refid="classQCPAbstractPlottable_1a19276ed2382a3a06464417b8788b1451" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mainPen</name></member>
      <member refid="classQCPLayerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mAntialiased</name></member>
      <member refid="classQCPAbstractPlottable_1ad48660b2bd301576e92fb033d8f455ea" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mAntialiasedErrorBars</name></member>
      <member refid="classQCPAbstractPlottable_1a152ac765bedf927fb240545d11d453ea" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mAntialiasedFill</name></member>
      <member refid="classQCPAbstractPlottable_1aa115755e525a8e3a86dc683f9cab755b" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mAntialiasedScatters</name></member>
      <member refid="classQCPAbstractPlottable_1a33f00674c0161c13315ab9da0895418e" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mBrush</name></member>
      <member refid="classQCPFinancial_1acb0e31874b7a1deb56bd42e8ab3e68f2" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mBrushNegative</name></member>
      <member refid="classQCPFinancial_1ab7e6eed16260a2f88ca6bd940dffea79" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mBrushPositive</name></member>
      <member refid="classQCPFinancial_1ab65c2ce8d6354451870bb44b894c1e92" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mChartStyle</name></member>
      <member refid="classQCPFinancial_1a475f63587ca1077d8c30aaf2b71ae026" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mData</name></member>
      <member refid="classQCPAbstractPlottable_1a426f42e254d0f8ce5436a868c61a6827" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mKeyAxis</name></member>
      <member refid="classQCPLayerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mLayer</name></member>
      <member refid="classQCPAbstractPlottable_1ac29ffef424e2488675930de18cde612a" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mName</name></member>
      <member refid="classQCPLayerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>moveToLayer</name></member>
      <member refid="classQCPLayerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mParentLayerable</name></member>
      <member refid="classQCPLayerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mParentPlot</name></member>
      <member refid="classQCPAbstractPlottable_1a67bc0622fd1b9fa14e54c14922dcec66" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mPen</name></member>
      <member refid="classQCPFinancial_1a263fbfefde2cc19c8d4024a8319c2bbb" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mPenNegative</name></member>
      <member refid="classQCPFinancial_1aa6599186f417ba615caebb3f6c762bd8" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mPenPositive</name></member>
      <member refid="classQCPAbstractPlottable_1aceee52342c8e75727abcbd164986fdcb" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mSelectable</name></member>
      <member refid="classQCPAbstractPlottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mSelected</name></member>
      <member refid="classQCPAbstractPlottable_1aea3c0da30c7a8be23ad5f2d9bca36762" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mSelectedBrush</name></member>
      <member refid="classQCPAbstractPlottable_1a10619472f5d5e10e9519a599f1cf5576" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mSelectedPen</name></member>
      <member refid="classQCPFinancial_1a6afe919190b884d9bac026cefcc8c0a8" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mTwoColored</name></member>
      <member refid="classQCPAbstractPlottable_1a2901452ca4aea911a1827717934a4bda" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mValueAxis</name></member>
      <member refid="classQCPLayerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mVisible</name></member>
      <member refid="classQCPFinancial_1af630e5eb8485146b9c777e63fd1cf993" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>mWidth</name></member>
      <member refid="classQCPAbstractPlottable_1a1affc1972938e4364a9325e4e4e4dcea" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>name</name></member>
      <member refid="classQCPFinancial_1a9c7d79351e728a67bfb6821c1d1bd6c0" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>ohlcSelectTest</name></member>
      <member refid="classQCPLayerable_1aecaafc76ad8146d2a4d54837c5eada46" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>parentLayerable</name></member>
      <member refid="classQCPLayerable_1ab7e0e94461566093d36ffc0f5312b109" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>parentPlot</name></member>
      <member refid="classQCPLayerable_1ac504c8a0075c2fefbf941c4e599d218c" prot="protected" virt="virtual"><scope>QCPFinancial</scope><name>parentPlotInitialized</name></member>
      <member refid="classQCPAbstractPlottable_1a41d060007cc6b3037c9c04d22d0c0398" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>pen</name></member>
      <member refid="classQCPFinancial_1a557fe911aa04f70c1734c8fa09994148" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>penNegative</name></member>
      <member refid="classQCPFinancial_1a544899bde79d06e17ccefcb9926d87ce" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>penPositive</name></member>
      <member refid="classQCPAbstractPlottable_1a10408828446e9e0681c46d65120f382e" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>pixelsToCoords</name></member>
      <member refid="classQCPAbstractPlottable_1a3e2c361cfcdfd5d803ada4d333a07e15" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>pixelsToCoords</name></member>
      <member refid="classQCPAbstractPlottable_1af78a036e40db6f53a31abadc5323715a" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>QCPAbstractPlottable</name></member>
      <member refid="classQCPFinancial_1a4702d5248feeb9d1ec6e3ce725b10b32" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>QCPFinancial</name></member>
      <member refid="classQCPLayerable_1a74c0fa237f29bf0e49565013fc5d1ec0" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>QCPLayerable</name></member>
      <member refid="classQCPFinancial_1a8429035e7adfbd7f05805a6530ad5e3b" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>QCPLegend</name></member>
      <member refid="classQCPFinancial_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>QCustomPlot</name></member>
      <member refid="classQCPLayerable_1a30809f7455e9794bca7b6c737622fa63" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>realVisibility</name></member>
      <member refid="classQCPFinancial_1a048c741d3c8cc5709c2c44b759fdf27c" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>removeData</name></member>
      <member refid="classQCPFinancial_1ae527d8a11290906b083d1ab598c380ea" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>removeData</name></member>
      <member refid="classQCPFinancial_1aa0fcd357005288c833a230c7874825ba" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>removeDataAfter</name></member>
      <member refid="classQCPFinancial_1a097c0383c7c1e9042ca7f93cb439d15a" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>removeDataBefore</name></member>
      <member refid="classQCPAbstractPlottable_1a679b272bfa2375796844f136c6bb209f" prot="public" virt="virtual"><scope>QCPFinancial</scope><name>removeFromLegend</name></member>
      <member refid="classQCPAbstractPlottable_1a7e8fc3be43c27ccacd70a7bf9d74a5cd" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>rescaleAxes</name></member>
      <member refid="classQCPAbstractPlottable_1a1acecfcca3e7fcda00fcbaa3c886386f" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>rescaleKeyAxis</name></member>
      <member refid="classQCPAbstractPlottable_1abfd0805eb1d955c0111a990246658324" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>rescaleValueAxis</name></member>
      <member refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>sdBoth</name></member>
      <member refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>sdNegative</name></member>
      <member refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>sdPositive</name></member>
      <member refid="classQCPAbstractPlottable_1af895574da1ec0d050711b6c9deda296a" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>selectable</name></member>
      <member refid="classQCPAbstractPlottable_1a0059caa3f3581f3959660fef8cbb71c4" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>selectableChanged</name></member>
      <member refid="classQCPAbstractPlottable_1ab901903adcb0e29467d63de72340ab29" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>selected</name></member>
      <member refid="classQCPAbstractPlottable_1a403745791879916431adc872b49207e5" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>selectedBrush</name></member>
      <member refid="classQCPAbstractPlottable_1a006065572c5add883a944ea4cda699f3" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>selectedPen</name></member>
      <member refid="classQCPAbstractPlottable_1af16359a3af92af8c960470ad56eb7089" prot="protected" virt="virtual"><scope>QCPFinancial</scope><name>selectEvent</name></member>
      <member refid="classQCPAbstractPlottable_1a316cf851abb3e690d35a9275bf2c770d" prot="protected" virt="virtual"><scope>QCPFinancial</scope><name>selectionCategory</name></member>
      <member refid="classQCPAbstractPlottable_1a3af66432b1dca93b28e00e78a8c7c1d9" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>selectionChanged</name></member>
      <member refid="classQCPFinancial_1aeb9a48e2bcc87f41f2473d9c139a76da" prot="public" virt="virtual"><scope>QCPFinancial</scope><name>selectTest</name></member>
      <member refid="classQCPLayerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setAntialiased</name></member>
      <member refid="classQCPAbstractPlottable_1a757beb744b96cf1855cca5ab9d3ecf52" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setAntialiasedErrorBars</name></member>
      <member refid="classQCPAbstractPlottable_1a089d6b5577120239b55c39ed27c39536" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setAntialiasedFill</name></member>
      <member refid="classQCPAbstractPlottable_1a2f03f067ede2ed4da6f7d0e4777a3f02" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setAntialiasedScatters</name></member>
      <member refid="classQCPAbstractPlottable_1a7a4b92144dca6453a1f0f210e27edc74" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setBrush</name></member>
      <member refid="classQCPFinancial_1a8bbdd87629f9144b3ef51af660c0961a" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setBrushNegative</name></member>
      <member refid="classQCPFinancial_1a5ebff2b1764efd07cc44942e67821829" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setBrushPositive</name></member>
      <member refid="classQCPFinancial_1a5a59175d36279d71596e64d7bb65596f" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setChartStyle</name></member>
      <member refid="classQCPFinancial_1adf12a86082f1e488df6a4e8603f8fd6d" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setData</name></member>
      <member refid="classQCPFinancial_1a886881339d6447432af55adaad748c3c" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setData</name></member>
      <member refid="classQCPAbstractPlottable_1a8524fa2994c63c0913ebd9bb2ffa3920" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setKeyAxis</name></member>
      <member refid="classQCPLayerable_1aea8c061ee8a1aa7ea88ee9ca9cbaa773" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setLayer</name></member>
      <member refid="classQCPLayerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setLayer</name></member>
      <member refid="classQCPAbstractPlottable_1ab79c7ba76bc7fa89a4b3580e12149f1f" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setName</name></member>
      <member refid="classQCPLayerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>setParentLayerable</name></member>
      <member refid="classQCPAbstractPlottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setPen</name></member>
      <member refid="classQCPFinancial_1afe5c07e94ccea01a75b3a2476993c346" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setPenNegative</name></member>
      <member refid="classQCPFinancial_1ac58aa3adc7a35aab0088764b840683e5" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setPenPositive</name></member>
      <member refid="classQCPAbstractPlottable_1a317de6ca6553ce1afdd7c75223e594ac" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setSelectable</name></member>
      <member refid="classQCPAbstractPlottable_1a26f0a07c80eb082429811ca572d5c8bd" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setSelected</name></member>
      <member refid="classQCPAbstractPlottable_1ae8c816874089f7a44001e8618e81a9dc" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setSelectedBrush</name></member>
      <member refid="classQCPAbstractPlottable_1a6911603cad23ab0469b108224517516f" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setSelectedPen</name></member>
      <member refid="classQCPFinancial_1a138e44aac160a17a9676652e240c5f08" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setTwoColored</name></member>
      <member refid="classQCPAbstractPlottable_1a71626a07367e241ec62ad2c34baf21cb" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setValueAxis</name></member>
      <member refid="classQCPLayerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setVisible</name></member>
      <member refid="classQCPFinancial_1a99633f8bac86a61d534ae5eeb1a3068f" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>setWidth</name></member>
      <member refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8" prot="protected" virt="non-virtual"><scope>QCPFinancial</scope><name>SignDomain</name></member>
      <member refid="classQCPFinancial_1aeb7431a9b4ab6490aaf518eca8f0deff" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>timeSeriesToOhlc</name></member>
      <member refid="classQCPFinancial_1a2bab30fc4eee38a0da3a05846b8d7ac7" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>twoColored</name></member>
      <member refid="classQCPAbstractPlottable_1a3106f9d34d330a6097a8ec5905e5b519" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>valueAxis</name></member>
      <member refid="classQCPLayerable_1a10a3cc92e0fa63e4a929e61d34e275a7" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>visible</name></member>
      <member refid="classQCPFinancial_1a71ccaa04cdade0ec08a2117db6e4a4ce" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>width</name></member>
      <member refid="classQCPFinancial_1af35f7b589b5d18ab8161df97b06617a2" prot="public" virt="virtual"><scope>QCPFinancial</scope><name>~QCPFinancial</name></member>
      <member refid="classQCPLayerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="non-virtual"><scope>QCPFinancial</scope><name>~QCPLayerable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
