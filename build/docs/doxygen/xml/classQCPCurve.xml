<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classQCPCurve" kind="class" prot="public">
    <compoundname>QCPCurve</compoundname>
    <basecompoundref refid="classQCPAbstractPlottable" prot="public" virt="non-virtual">QCPAbstractPlottable</basecompoundref>
    <includes refid="qcustomplot_8h" local="no">qcustomplot.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classQCPCurve_1a2710e9f79302152cff794c6e16cc01f1" prot="public" static="no">
        <name>LineStyle</name>
        <enumvalue id="classQCPCurve_1a2710e9f79302152cff794c6e16cc01f1aec1601a191cdf0b4e761c4c66092cc48" prot="public">
          <name>lsNone</name>
          <briefdescription>
<para>No line is drawn between data points (e.g. only scatters) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classQCPCurve_1a2710e9f79302152cff794c6e16cc01f1ade5822ce6fbf131d3df131795c2e1003" prot="public">
          <name>lsLine</name>
          <briefdescription>
<para>Data points are connected with a straight line. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines how the curve&apos;s line is represented visually in the plot. The line is drawn with the current pen of the curve (<ref refid="classQCPAbstractPlottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" kindref="member">setPen</ref>). <simplesect kind="see"><para><ref refid="classQCPCurve_1a4a377ec863ff81a1875c3094a6177c19" kindref="member">setLineStyle</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2673" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2673" bodyend="2675"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classQCPCurve_1a88d533e455bca96004b049e99168731b" prot="protected" static="no" mutable="no">
        <type><ref refid="qcustomplot_8h_1a444d37ec9cb2951b3a7fe443c34d1658" kindref="member">QCPCurveDataMap</ref> *</type>
        <definition>QCPCurveDataMap* QCPCurve::mData</definition>
        <argsstring></argsstring>
        <name>mData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2708" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2708" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPCurve_1a08f803b4a30b01bbd7a1eab15d0f864f" prot="protected" static="no" mutable="no">
        <type><ref refid="classQCPScatterStyle" kindref="compound">QCPScatterStyle</ref></type>
        <definition>QCPScatterStyle QCPCurve::mScatterStyle</definition>
        <argsstring></argsstring>
        <name>mScatterStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2709" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2709" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classQCPCurve_1ae1f35ae2b15aee8e15bcdfec5be95156" prot="protected" static="no" mutable="no">
        <type><ref refid="classQCPCurve_1a2710e9f79302152cff794c6e16cc01f1" kindref="member">LineStyle</ref></type>
        <definition>LineStyle QCPCurve::mLineStyle</definition>
        <argsstring></argsstring>
        <name>mLineStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2710" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2710" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classQCPCurve_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class QCustomPlot</definition>
        <argsstring></argsstring>
        <name>QCustomPlot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2731" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2731" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classQCPCurve_1a8429035e7adfbd7f05805a6530ad5e3b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class QCPLegend</definition>
        <argsstring></argsstring>
        <name>QCPLegend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2732" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2732" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classQCPCurve_1a36de58e2652b3fa47bdf9187d421d3ce" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QCPCurve::QCPCurve</definition>
        <argsstring>(QCPAxis *keyAxis, QCPAxis *valueAxis)</argsstring>
        <name>QCPCurve</name>
        <param>
          <type><ref refid="classQCPAxis" kindref="compound">QCPAxis</ref> *</type>
          <declname>keyAxis</declname>
        </param>
        <param>
          <type><ref refid="classQCPAxis" kindref="compound">QCPAxis</ref> *</type>
          <declname>valueAxis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2676" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a667f1bfb610e91105cda6b1606884d66" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QCPCurve::~QCPCurve</definition>
        <argsstring>()</argsstring>
        <name>~QCPCurve</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2677" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a9ac194d35d4f334923aac9df1bf599ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="qcustomplot_8h_1a444d37ec9cb2951b3a7fe443c34d1658" kindref="member">QCPCurveDataMap</ref> *</type>
        <definition>QCPCurveDataMap* QCPCurve::data</definition>
        <argsstring>() const </argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2680" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2680" bodyend="2680"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a9ab864c9f6ba0cedf65853f59d867a68" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQCPScatterStyle" kindref="compound">QCPScatterStyle</ref></type>
        <definition>QCPScatterStyle QCPCurve::scatterStyle</definition>
        <argsstring>() const </argsstring>
        <name>scatterStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2681" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2681" bodyend="2681"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a0314dd644258949aeb4a95cebde5abaf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classQCPCurve_1a2710e9f79302152cff794c6e16cc01f1" kindref="member">LineStyle</ref></type>
        <definition>LineStyle QCPCurve::lineStyle</definition>
        <argsstring>() const </argsstring>
        <name>lineStyle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2682" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2682" bodyend="2682"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a631ac886708460013b30052f49cbc9da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::setData</definition>
        <argsstring>(QCPCurveDataMap *data, bool copy=false)</argsstring>
        <name>setData</name>
        <param>
          <type><ref refid="qcustomplot_8h_1a444d37ec9cb2951b3a7fe443c34d1658" kindref="member">QCPCurveDataMap</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>copy</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2685" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1affe80e011e2ced62a88f614acd6ab8d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::setData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;t, const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value)</argsstring>
        <name>setData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2686" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a963d4c45777deef15848a8f56172d066" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::setData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;key, const QVector&lt; double &gt; &amp;value)</argsstring>
        <name>setData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2687" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a55e43b44709bf50a35500644988aa706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::setScatterStyle</definition>
        <argsstring>(const QCPScatterStyle &amp;style)</argsstring>
        <name>setScatterStyle</name>
        <param>
          <type>const <ref refid="classQCPScatterStyle" kindref="compound">QCPScatterStyle</ref> &amp;</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2688" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a4a377ec863ff81a1875c3094a6177c19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::setLineStyle</definition>
        <argsstring>(LineStyle style)</argsstring>
        <name>setLineStyle</name>
        <param>
          <type><ref refid="classQCPCurve_1a2710e9f79302152cff794c6e16cc01f1" kindref="member">LineStyle</ref></type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2689" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a4e24023c3b9ac75440c7a260172c99af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::addData</definition>
        <argsstring>(const QCPCurveDataMap &amp;dataMap)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="qcustomplot_8h_1a444d37ec9cb2951b3a7fe443c34d1658" kindref="member">QCPCurveDataMap</ref> &amp;</type>
          <declname>dataMap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2692" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1ad304326aba096911f92452d8bfe0470e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::addData</definition>
        <argsstring>(const QCPCurveData &amp;data)</argsstring>
        <name>addData</name>
        <param>
          <type>const <ref refid="classQCPCurveData" kindref="compound">QCPCurveData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2693" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a13398b236f6926014e404eeb5b9f415c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::addData</definition>
        <argsstring>(double t, double key, double value)</argsstring>
        <name>addData</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2694" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1ada4762e793cd5707b33f35b8a4b0f8fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::addData</definition>
        <argsstring>(double key, double value)</argsstring>
        <name>addData</name>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2695" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a27c8b3dddd4067d626397ee199626722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::addData</definition>
        <argsstring>(const QVector&lt; double &gt; &amp;ts, const QVector&lt; double &gt; &amp;keys, const QVector&lt; double &gt; &amp;values)</argsstring>
        <name>addData</name>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>ts</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>const QVector&lt; double &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2696" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1af6f4284fbc2f34e676f24dce03c34fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::removeDataBefore</definition>
        <argsstring>(double t)</argsstring>
        <name>removeDataBefore</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2697" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a0365cb947c4e6d405ee22e00191d5f52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::removeDataAfter</definition>
        <argsstring>(double t)</argsstring>
        <name>removeDataAfter</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2698" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1ad45bb5479be799163028ef2b776f7221" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::removeData</definition>
        <argsstring>(double fromt, double tot)</argsstring>
        <name>removeData</name>
        <param>
          <type>double</type>
          <declname>fromt</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tot</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2699" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a30c91acfa591ec534c49fed4c0fca39a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::removeData</definition>
        <argsstring>(double t)</argsstring>
        <name>removeData</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2700" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a9ed0fe874dfaa84304ea1a1fba9b4bb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPCurve::clearData</definition>
        <argsstring>()</argsstring>
        <name>clearData</name>
        <reimplements refid="classQCPAbstractPlottable_1a7d8e47f8558a0f224d3ae1e214475d14">clearData</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2703" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a26b59c5a2243205bdad786e3d5e76903" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>virtual double QCPCurve::selectTest</definition>
        <argsstring>(const QPointF &amp;pos, bool onlySelectable, QVariant *details=0) const </argsstring>
        <name>selectTest</name>
        <reimplements refid="classQCPAbstractPlottable_1a38efe9641d972992a3d44204bc80ec1d">selectTest</reimplements>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>onlySelectable</declname>
        </param>
        <param>
          <type>QVariant *</type>
          <declname>details</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2704" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classQCPCurve_1a26e2b95b8457b08547e9ae8578c0b038" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPCurve::draw</definition>
        <argsstring>(QCPPainter *painter)</argsstring>
        <name>draw</name>
        <reimplements refid="classQCPAbstractPlottable_1acbab5e30dcd04fd302b4a5902ac2c482">draw</reimplements>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2713" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1af38bf0ce041cafc106e4028700d3970b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPCurve::drawLegendIcon</definition>
        <argsstring>(QCPPainter *painter, const QRectF &amp;rect) const </argsstring>
        <name>drawLegendIcon</name>
        <reimplements refid="classQCPAbstractPlottable_1a71c259f4f96533d12df152c446b17425">drawLegendIcon</reimplements>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const QRectF &amp;</type>
          <declname>rect</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2714" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a01b0ff2d603257a54f12295029cdd126" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQCPRange" kindref="compound">QCPRange</ref></type>
        <definition>virtual QCPRange QCPCurve::getKeyRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain=sdBoth) const </argsstring>
        <name>getKeyRange</name>
        <reimplements refid="classQCPAbstractPlottable_1a773e364928578909df1b33c8ad886688">getKeyRange</reimplements>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
          <defval><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2715" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a1f63d2958613bd8f5a93f305ad0e2e3c" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classQCPRange" kindref="compound">QCPRange</ref></type>
        <definition>virtual QCPRange QCPCurve::getValueRange</definition>
        <argsstring>(bool &amp;foundRange, SignDomain inSignDomain=sdBoth) const </argsstring>
        <name>getValueRange</name>
        <reimplements refid="classQCPAbstractPlottable_1a2e7d732592d8800000851ff51d5c384f">getValueRange</reimplements>
        <param>
          <type>bool &amp;</type>
          <declname>foundRange</declname>
        </param>
        <param>
          <type><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8" kindref="member">SignDomain</ref></type>
          <declname>inSignDomain</declname>
          <defval><ref refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" kindref="member">sdBoth</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2716" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a574bd10df26f2134ecfc35983c3c26ae" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void QCPCurve::drawScatterPlot</definition>
        <argsstring>(QCPPainter *painter, const QVector&lt; QPointF &gt; *pointData) const </argsstring>
        <name>drawScatterPlot</name>
        <param>
          <type><ref refid="classQCPPainter" kindref="compound">QCPPainter</ref> *</type>
          <declname>painter</declname>
        </param>
        <param>
          <type>const QVector&lt; QPointF &gt; *</type>
          <declname>pointData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2719" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1afa895f8ba9ae34fea6ecea295fd7b1e5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::getCurveData</definition>
        <argsstring>(QVector&lt; QPointF &gt; *lineData) const </argsstring>
        <name>getCurveData</name>
        <param>
          <type>QVector&lt; QPointF &gt; *</type>
          <declname>lineData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2722" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1a3af3183f35bd7aebe149f29ae4f1034a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QCPCurve::getRegion</definition>
        <argsstring>(double x, double y, double rectLeft, double rectTop, double rectRight, double rectBottom) const </argsstring>
        <name>getRegion</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectLeft</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectTop</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectRight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectBottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2723" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1acbcfea8986dde6c0143e3f7e8e76041d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QPointF</type>
        <definition>QPointF QCPCurve::getOptimizedPoint</definition>
        <argsstring>(int prevRegion, double prevKey, double prevValue, double key, double value, double rectLeft, double rectTop, double rectRight, double rectBottom) const </argsstring>
        <name>getOptimizedPoint</name>
        <param>
          <type>int</type>
          <declname>prevRegion</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prevKey</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prevValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectLeft</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectTop</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectRight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectBottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2724" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1ac1ee736b1afdbbbe9872d224525452b8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QVector&lt; QPointF &gt;</type>
        <definition>QVector&lt;QPointF&gt; QCPCurve::getOptimizedCornerPoints</definition>
        <argsstring>(int prevRegion, int currentRegion, double prevKey, double prevValue, double key, double value, double rectLeft, double rectTop, double rectRight, double rectBottom) const </argsstring>
        <name>getOptimizedCornerPoints</name>
        <param>
          <type>int</type>
          <declname>prevRegion</declname>
        </param>
        <param>
          <type>int</type>
          <declname>currentRegion</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prevKey</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prevValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectLeft</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectTop</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectRight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectBottom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2725" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1ae5b232c8201441a940516c745309a685" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPCurve::mayTraverse</definition>
        <argsstring>(int prevRegion, int currentRegion) const </argsstring>
        <name>mayTraverse</name>
        <param>
          <type>int</type>
          <declname>prevRegion</declname>
        </param>
        <param>
          <type>int</type>
          <declname>currentRegion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2726" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1ab4ffdf3d62d5bd3a187f6668daf01f85" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QCPCurve::getTraverse</definition>
        <argsstring>(double prevKey, double prevValue, double key, double value, double rectLeft, double rectTop, double rectRight, double rectBottom, QPointF &amp;crossA, QPointF &amp;crossB) const </argsstring>
        <name>getTraverse</name>
        <param>
          <type>double</type>
          <declname>prevKey</declname>
        </param>
        <param>
          <type>double</type>
          <declname>prevValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectLeft</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectTop</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectRight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectBottom</declname>
        </param>
        <param>
          <type>QPointF &amp;</type>
          <declname>crossA</declname>
        </param>
        <param>
          <type>QPointF &amp;</type>
          <declname>crossB</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2727" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1abe1721b19669e7127d76d144660fbeb8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QCPCurve::getTraverseCornerPoints</definition>
        <argsstring>(int prevRegion, int currentRegion, double rectLeft, double rectTop, double rectRight, double rectBottom, QVector&lt; QPointF &gt; &amp;beforeTraverse, QVector&lt; QPointF &gt; &amp;afterTraverse) const </argsstring>
        <name>getTraverseCornerPoints</name>
        <param>
          <type>int</type>
          <declname>prevRegion</declname>
        </param>
        <param>
          <type>int</type>
          <declname>currentRegion</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectLeft</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectTop</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectRight</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rectBottom</declname>
        </param>
        <param>
          <type>QVector&lt; QPointF &gt; &amp;</type>
          <declname>beforeTraverse</declname>
        </param>
        <param>
          <type>QVector&lt; QPointF &gt; &amp;</type>
          <declname>afterTraverse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2728" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classQCPCurve_1acd7a68c6f268ce1ab845eaf69fc2c6a6" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QCPCurve::pointDistance</definition>
        <argsstring>(const QPointF &amp;pixelPoint) const </argsstring>
        <name>pointDistance</name>
        <param>
          <type>const QPointF &amp;</type>
          <declname>pixelPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2729" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="281">
        <label>QObject</label>
      </node>
      <node id="279">
        <label>QCPAbstractPlottable</label>
        <link refid="classQCPAbstractPlottable"/>
        <childnode refid="280" relation="public-inheritance">
        </childnode>
      </node>
      <node id="280">
        <label>QCPLayerable</label>
        <link refid="classQCPLayerable"/>
        <childnode refid="281" relation="public-inheritance">
        </childnode>
      </node>
      <node id="278">
        <label>QCPCurve</label>
        <link refid="classQCPCurve"/>
        <childnode refid="279" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="298">
        <label>QCPLayoutInset</label>
        <link refid="classQCPLayoutInset"/>
        <childnode refid="290" relation="public-inheritance">
        </childnode>
      </node>
      <node id="291">
        <label>QCPLayoutElement</label>
        <link refid="classQCPLayoutElement"/>
        <childnode refid="284" relation="public-inheritance">
        </childnode>
        <childnode refid="290" relation="usage">
          <edgelabel>mParentLayout</edgelabel>
        </childnode>
      </node>
      <node id="285">
        <label>QObject</label>
      </node>
      <node id="293">
        <label>QCPRange</label>
        <link refid="classQCPRange"/>
      </node>
      <node id="299">
        <label>QCPLegend</label>
        <link refid="classQCPLegend"/>
        <childnode refid="289" relation="public-inheritance">
        </childnode>
      </node>
      <node id="283">
        <label>QCPAbstractPlottable</label>
        <link refid="classQCPAbstractPlottable"/>
        <childnode refid="284" relation="public-inheritance">
        </childnode>
      </node>
      <node id="295">
        <label>QCPLineEnding</label>
        <link refid="classQCPLineEnding"/>
      </node>
      <node id="290">
        <label>QCPLayout</label>
        <link refid="classQCPLayout"/>
        <childnode refid="291" relation="public-inheritance">
        </childnode>
      </node>
      <node id="296">
        <label>QCPGrid</label>
        <link refid="classQCPGrid"/>
        <childnode refid="284" relation="public-inheritance">
        </childnode>
        <childnode refid="292" relation="usage">
          <edgelabel>mParentAxis</edgelabel>
        </childnode>
      </node>
      <node id="294">
        <label>QCPAxisPainterPrivate</label>
        <link refid="classQCPAxisPainterPrivate"/>
        <childnode refid="295" relation="usage">
          <edgelabel>lowerEnding</edgelabel>
          <edgelabel>upperEnding</edgelabel>
        </childnode>
        <childnode refid="287" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="288">
        <label>QWidget</label>
      </node>
      <node id="286">
        <label>QCPLayer</label>
        <link refid="classQCPLayer"/>
        <childnode refid="285" relation="public-inheritance">
        </childnode>
        <childnode refid="287" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="289">
        <label>QCPLayoutGrid</label>
        <link refid="classQCPLayoutGrid"/>
        <childnode refid="290" relation="public-inheritance">
        </childnode>
      </node>
      <node id="284">
        <label>QCPLayerable</label>
        <link refid="classQCPLayerable"/>
        <childnode refid="285" relation="public-inheritance">
        </childnode>
        <childnode refid="286" relation="usage">
          <edgelabel>mLayer</edgelabel>
        </childnode>
        <childnode refid="287" relation="usage">
          <edgelabel>mParentPlot</edgelabel>
        </childnode>
      </node>
      <node id="292">
        <label>QCPAxis</label>
        <link refid="classQCPAxis"/>
        <childnode refid="284" relation="public-inheritance">
        </childnode>
        <childnode refid="293" relation="usage">
          <edgelabel>mRange</edgelabel>
        </childnode>
        <childnode refid="294" relation="usage">
          <edgelabel>mAxisPainter</edgelabel>
        </childnode>
        <childnode refid="296" relation="usage">
          <edgelabel>mGrid</edgelabel>
        </childnode>
        <childnode refid="297" relation="usage">
          <edgelabel>mAxisRect</edgelabel>
        </childnode>
      </node>
      <node id="297">
        <label>QCPAxisRect</label>
        <link refid="classQCPAxisRect"/>
        <childnode refid="291" relation="public-inheritance">
        </childnode>
        <childnode refid="298" relation="usage">
          <edgelabel>mInsetLayout</edgelabel>
        </childnode>
        <childnode refid="293" relation="usage">
          <edgelabel>mDragStartVertRange</edgelabel>
          <edgelabel>mDragStartHorzRange</edgelabel>
        </childnode>
      </node>
      <node id="282">
        <label>QCPCurve</label>
        <link refid="classQCPCurve"/>
        <childnode refid="283" relation="public-inheritance">
        </childnode>
        <childnode refid="300" relation="usage">
          <edgelabel>mScatterStyle</edgelabel>
        </childnode>
      </node>
      <node id="287">
        <label>QCustomPlot</label>
        <link refid="classQCustomPlot"/>
        <childnode refid="288" relation="public-inheritance">
        </childnode>
        <childnode refid="286" relation="usage">
          <edgelabel>mCurrentLayer</edgelabel>
        </childnode>
        <childnode refid="289" relation="usage">
          <edgelabel>mPlotLayout</edgelabel>
        </childnode>
        <childnode refid="292" relation="usage">
          <edgelabel>yAxis2</edgelabel>
          <edgelabel>xAxis2</edgelabel>
          <edgelabel>xAxis</edgelabel>
          <edgelabel>yAxis</edgelabel>
        </childnode>
        <childnode refid="299" relation="usage">
          <edgelabel>legend</edgelabel>
        </childnode>
      </node>
      <node id="300">
        <label>QCPScatterStyle</label>
        <link refid="classQCPScatterStyle"/>
      </node>
    </collaborationgraph>
    <location file="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" line="2661" column="1" bodyfile="/home/ubuntu/projects/gr-myBlocks/lib/qcustomplot.h" bodystart="2660" bodyend="2733"/>
    <listofallmembers>
      <member refid="classQCPCurve_1a4e24023c3b9ac75440c7a260172c99af" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>addData</name></member>
      <member refid="classQCPCurve_1ad304326aba096911f92452d8bfe0470e" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>addData</name></member>
      <member refid="classQCPCurve_1a13398b236f6926014e404eeb5b9f415c" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>addData</name></member>
      <member refid="classQCPCurve_1ada4762e793cd5707b33f35b8a4b0f8fb" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>addData</name></member>
      <member refid="classQCPCurve_1a27c8b3dddd4067d626397ee199626722" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>addData</name></member>
      <member refid="classQCPAbstractPlottable_1a2e55c6f6cf358f002c626a3a26be4b81" prot="public" virt="virtual"><scope>QCPCurve</scope><name>addToLegend</name></member>
      <member refid="classQCPLayerable_1aef5cb4aa899ed9dc9384fd614560291e" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>antialiased</name></member>
      <member refid="classQCPAbstractPlottable_1a630cfb27ff99ab4373b09631748fcf4a" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>antialiasedErrorBars</name></member>
      <member refid="classQCPAbstractPlottable_1a68d1c358db03faae376ec47c589abf27" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>antialiasedFill</name></member>
      <member refid="classQCPAbstractPlottable_1aefc379bcc011660a5371ecc6088a97eb" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>antialiasedScatters</name></member>
      <member refid="classQCPLayerable_1a62bd552d1a45aa9accb24b310542279e" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>applyAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1a76e9d6cc7972dc1528f526d163766aca" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>applyDefaultAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1af687bfe6160255960558eb71f1f81e73" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>applyErrorBarsAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1ac08a480155895e674dbfe5a5670e0ff3" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>applyFillAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1a753272ee225a62827e90c3e1e78de4b1" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>applyScattersAntialiasingHint</name></member>
      <member refid="classQCPAbstractPlottable_1aa74cdceb9c7286ef116fbfa58e0326e7" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>brush</name></member>
      <member refid="classQCPCurve_1a9ed0fe874dfaa84304ea1a1fba9b4bb3" prot="public" virt="virtual"><scope>QCPCurve</scope><name>clearData</name></member>
      <member refid="classQCPAbstractPlottable_1acc09ccca4eb6e2a6a739411f9f742c54" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>clipRect</name></member>
      <member refid="classQCPAbstractPlottable_1ade710a776104b14c1c835168ce1bfc5c" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>coordsToPixels</name></member>
      <member refid="classQCPAbstractPlottable_1a9fd1c9df8391781f05b0be22fbe91e13" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>coordsToPixels</name></member>
      <member refid="classQCPCurve_1a9ac194d35d4f334923aac9df1bf599ca" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>data</name></member>
      <member refid="classQCPAbstractPlottable_1a7dbc1dd1aeccb7531089c780fc373d14" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>deselectEvent</name></member>
      <member refid="classQCPAbstractPlottable_1a5ea1cab44ca912dcdc96ed81ec5bed5d" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>distSqrToLine</name></member>
      <member refid="classQCPCurve_1a26e2b95b8457b08547e9ae8578c0b038" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>draw</name></member>
      <member refid="classQCPCurve_1af38bf0ce041cafc106e4028700d3970b" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>drawLegendIcon</name></member>
      <member refid="classQCPCurve_1a574bd10df26f2134ecfc35983c3c26ae" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>drawScatterPlot</name></member>
      <member refid="classQCPCurve_1afa895f8ba9ae34fea6ecea295fd7b1e5" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>getCurveData</name></member>
      <member refid="classQCPCurve_1a01b0ff2d603257a54f12295029cdd126" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>getKeyRange</name></member>
      <member refid="classQCPCurve_1ac1ee736b1afdbbbe9872d224525452b8" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>getOptimizedCornerPoints</name></member>
      <member refid="classQCPCurve_1acbcfea8986dde6c0143e3f7e8e76041d" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>getOptimizedPoint</name></member>
      <member refid="classQCPCurve_1a3af3183f35bd7aebe149f29ae4f1034a" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>getRegion</name></member>
      <member refid="classQCPCurve_1ab4ffdf3d62d5bd3a187f6668daf01f85" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>getTraverse</name></member>
      <member refid="classQCPCurve_1abe1721b19669e7127d76d144660fbeb8" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>getTraverseCornerPoints</name></member>
      <member refid="classQCPCurve_1a1f63d2958613bd8f5a93f305ad0e2e3c" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>getValueRange</name></member>
      <member refid="classQCPLayerable_1a8cbe5a0c9a5674249982f5ca5f8e02bc" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>initializeParentPlot</name></member>
      <member refid="classQCPAbstractPlottable_1a72c7a09c22963f2c943f07112b311103" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>keyAxis</name></member>
      <member refid="classQCPLayerable_1aea67e8c19145e70d68c286a36f6b8300" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>layer</name></member>
      <member refid="classQCPLayerable_1abbf8657cedea73ac1c3499b521c90eba" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>layerChanged</name></member>
      <member refid="classQCPCurve_1a2710e9f79302152cff794c6e16cc01f1" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>LineStyle</name></member>
      <member refid="classQCPCurve_1a0314dd644258949aeb4a95cebde5abaf" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>lineStyle</name></member>
      <member refid="classQCPCurve_1a2710e9f79302152cff794c6e16cc01f1ade5822ce6fbf131d3df131795c2e1003" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>lsLine</name></member>
      <member refid="classQCPCurve_1a2710e9f79302152cff794c6e16cc01f1aec1601a191cdf0b4e761c4c66092cc48" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>lsNone</name></member>
      <member refid="classQCPAbstractPlottable_1ae74c123832da180c17e22203e748d9b7" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mainBrush</name></member>
      <member refid="classQCPAbstractPlottable_1a19276ed2382a3a06464417b8788b1451" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mainPen</name></member>
      <member refid="classQCPLayerable_1a3ab45a4c76a3333ce42eb217a81733ec" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mAntialiased</name></member>
      <member refid="classQCPAbstractPlottable_1ad48660b2bd301576e92fb033d8f455ea" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mAntialiasedErrorBars</name></member>
      <member refid="classQCPAbstractPlottable_1a152ac765bedf927fb240545d11d453ea" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mAntialiasedFill</name></member>
      <member refid="classQCPAbstractPlottable_1aa115755e525a8e3a86dc683f9cab755b" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mAntialiasedScatters</name></member>
      <member refid="classQCPCurve_1ae5b232c8201441a940516c745309a685" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mayTraverse</name></member>
      <member refid="classQCPAbstractPlottable_1a33f00674c0161c13315ab9da0895418e" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mBrush</name></member>
      <member refid="classQCPCurve_1a88d533e455bca96004b049e99168731b" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mData</name></member>
      <member refid="classQCPAbstractPlottable_1a426f42e254d0f8ce5436a868c61a6827" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mKeyAxis</name></member>
      <member refid="classQCPLayerable_1aa38ec5891aff0f50b36fd63e9372a0cd" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mLayer</name></member>
      <member refid="classQCPCurve_1ae1f35ae2b15aee8e15bcdfec5be95156" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mLineStyle</name></member>
      <member refid="classQCPAbstractPlottable_1ac29ffef424e2488675930de18cde612a" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mName</name></member>
      <member refid="classQCPLayerable_1af94484cfb7cbbddb7de522e9be71d9a4" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>moveToLayer</name></member>
      <member refid="classQCPLayerable_1a3291445a980053e2d17a21d15957624e" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mParentLayerable</name></member>
      <member refid="classQCPLayerable_1aa2a528433e44db02b8aef23c1f9f90ed" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mParentPlot</name></member>
      <member refid="classQCPAbstractPlottable_1a67bc0622fd1b9fa14e54c14922dcec66" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mPen</name></member>
      <member refid="classQCPCurve_1a08f803b4a30b01bbd7a1eab15d0f864f" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mScatterStyle</name></member>
      <member refid="classQCPAbstractPlottable_1aceee52342c8e75727abcbd164986fdcb" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mSelectable</name></member>
      <member refid="classQCPAbstractPlottable_1a43f68a0603e9bcd016bdfa6d9d5c41c9" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mSelected</name></member>
      <member refid="classQCPAbstractPlottable_1aea3c0da30c7a8be23ad5f2d9bca36762" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mSelectedBrush</name></member>
      <member refid="classQCPAbstractPlottable_1a10619472f5d5e10e9519a599f1cf5576" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mSelectedPen</name></member>
      <member refid="classQCPAbstractPlottable_1a2901452ca4aea911a1827717934a4bda" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mValueAxis</name></member>
      <member refid="classQCPLayerable_1a62e3aed8427d6ce3ccf716f285106cb3" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>mVisible</name></member>
      <member refid="classQCPAbstractPlottable_1a1affc1972938e4364a9325e4e4e4dcea" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>name</name></member>
      <member refid="classQCPLayerable_1aecaafc76ad8146d2a4d54837c5eada46" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>parentLayerable</name></member>
      <member refid="classQCPLayerable_1ab7e0e94461566093d36ffc0f5312b109" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>parentPlot</name></member>
      <member refid="classQCPLayerable_1ac504c8a0075c2fefbf941c4e599d218c" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>parentPlotInitialized</name></member>
      <member refid="classQCPAbstractPlottable_1a41d060007cc6b3037c9c04d22d0c0398" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>pen</name></member>
      <member refid="classQCPAbstractPlottable_1a10408828446e9e0681c46d65120f382e" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>pixelsToCoords</name></member>
      <member refid="classQCPAbstractPlottable_1a3e2c361cfcdfd5d803ada4d333a07e15" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>pixelsToCoords</name></member>
      <member refid="classQCPCurve_1acd7a68c6f268ce1ab845eaf69fc2c6a6" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>pointDistance</name></member>
      <member refid="classQCPAbstractPlottable_1af78a036e40db6f53a31abadc5323715a" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>QCPAbstractPlottable</name></member>
      <member refid="classQCPCurve_1a36de58e2652b3fa47bdf9187d421d3ce" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>QCPCurve</name></member>
      <member refid="classQCPLayerable_1a74c0fa237f29bf0e49565013fc5d1ec0" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>QCPLayerable</name></member>
      <member refid="classQCPCurve_1a8429035e7adfbd7f05805a6530ad5e3b" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>QCPLegend</name></member>
      <member refid="classQCPCurve_1a1cdf9df76adcfae45261690aa0ca2198" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>QCustomPlot</name></member>
      <member refid="classQCPLayerable_1a30809f7455e9794bca7b6c737622fa63" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>realVisibility</name></member>
      <member refid="classQCPCurve_1ad45bb5479be799163028ef2b776f7221" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>removeData</name></member>
      <member refid="classQCPCurve_1a30c91acfa591ec534c49fed4c0fca39a" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>removeData</name></member>
      <member refid="classQCPCurve_1a0365cb947c4e6d405ee22e00191d5f52" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>removeDataAfter</name></member>
      <member refid="classQCPCurve_1af6f4284fbc2f34e676f24dce03c34fe5" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>removeDataBefore</name></member>
      <member refid="classQCPAbstractPlottable_1a679b272bfa2375796844f136c6bb209f" prot="public" virt="virtual"><scope>QCPCurve</scope><name>removeFromLegend</name></member>
      <member refid="classQCPAbstractPlottable_1a7e8fc3be43c27ccacd70a7bf9d74a5cd" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>rescaleAxes</name></member>
      <member refid="classQCPAbstractPlottable_1a1acecfcca3e7fcda00fcbaa3c886386f" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>rescaleKeyAxis</name></member>
      <member refid="classQCPAbstractPlottable_1abfd0805eb1d955c0111a990246658324" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>rescaleValueAxis</name></member>
      <member refid="classQCPCurve_1a9ab864c9f6ba0cedf65853f59d867a68" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>scatterStyle</name></member>
      <member refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a082b98cfb91a7363a3b5cd17b0c1cd60" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>sdBoth</name></member>
      <member refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a0fc9a70796ef60ad18ddd18056e6dc63" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>sdNegative</name></member>
      <member refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8a02951859f243a4d24e779cfbb5471030" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>sdPositive</name></member>
      <member refid="classQCPAbstractPlottable_1af895574da1ec0d050711b6c9deda296a" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>selectable</name></member>
      <member refid="classQCPAbstractPlottable_1a0059caa3f3581f3959660fef8cbb71c4" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>selectableChanged</name></member>
      <member refid="classQCPAbstractPlottable_1ab901903adcb0e29467d63de72340ab29" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>selected</name></member>
      <member refid="classQCPAbstractPlottable_1a403745791879916431adc872b49207e5" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>selectedBrush</name></member>
      <member refid="classQCPAbstractPlottable_1a006065572c5add883a944ea4cda699f3" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>selectedPen</name></member>
      <member refid="classQCPAbstractPlottable_1af16359a3af92af8c960470ad56eb7089" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>selectEvent</name></member>
      <member refid="classQCPAbstractPlottable_1a316cf851abb3e690d35a9275bf2c770d" prot="protected" virt="virtual"><scope>QCPCurve</scope><name>selectionCategory</name></member>
      <member refid="classQCPAbstractPlottable_1a3af66432b1dca93b28e00e78a8c7c1d9" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>selectionChanged</name></member>
      <member refid="classQCPCurve_1a26b59c5a2243205bdad786e3d5e76903" prot="public" virt="virtual"><scope>QCPCurve</scope><name>selectTest</name></member>
      <member refid="classQCPLayerable_1a4fd43e89be4a553ead41652565ff0581" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setAntialiased</name></member>
      <member refid="classQCPAbstractPlottable_1a757beb744b96cf1855cca5ab9d3ecf52" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setAntialiasedErrorBars</name></member>
      <member refid="classQCPAbstractPlottable_1a089d6b5577120239b55c39ed27c39536" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setAntialiasedFill</name></member>
      <member refid="classQCPAbstractPlottable_1a2f03f067ede2ed4da6f7d0e4777a3f02" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setAntialiasedScatters</name></member>
      <member refid="classQCPAbstractPlottable_1a7a4b92144dca6453a1f0f210e27edc74" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setBrush</name></member>
      <member refid="classQCPCurve_1a631ac886708460013b30052f49cbc9da" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setData</name></member>
      <member refid="classQCPCurve_1affe80e011e2ced62a88f614acd6ab8d1" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setData</name></member>
      <member refid="classQCPCurve_1a963d4c45777deef15848a8f56172d066" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setData</name></member>
      <member refid="classQCPAbstractPlottable_1a8524fa2994c63c0913ebd9bb2ffa3920" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setKeyAxis</name></member>
      <member refid="classQCPLayerable_1aea8c061ee8a1aa7ea88ee9ca9cbaa773" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setLayer</name></member>
      <member refid="classQCPLayerable_1ab25a0e7b897993b44447caee0f142083" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setLayer</name></member>
      <member refid="classQCPCurve_1a4a377ec863ff81a1875c3094a6177c19" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setLineStyle</name></member>
      <member refid="classQCPAbstractPlottable_1ab79c7ba76bc7fa89a4b3580e12149f1f" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setName</name></member>
      <member refid="classQCPLayerable_1aa23c893671f1f6744ac235cf2204cf3a" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>setParentLayerable</name></member>
      <member refid="classQCPAbstractPlottable_1ab74b09ae4c0e7e13142fe4b5bf46cac7" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setPen</name></member>
      <member refid="classQCPCurve_1a55e43b44709bf50a35500644988aa706" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setScatterStyle</name></member>
      <member refid="classQCPAbstractPlottable_1a317de6ca6553ce1afdd7c75223e594ac" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setSelectable</name></member>
      <member refid="classQCPAbstractPlottable_1a26f0a07c80eb082429811ca572d5c8bd" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setSelected</name></member>
      <member refid="classQCPAbstractPlottable_1ae8c816874089f7a44001e8618e81a9dc" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setSelectedBrush</name></member>
      <member refid="classQCPAbstractPlottable_1a6911603cad23ab0469b108224517516f" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setSelectedPen</name></member>
      <member refid="classQCPAbstractPlottable_1a71626a07367e241ec62ad2c34baf21cb" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setValueAxis</name></member>
      <member refid="classQCPLayerable_1a3bed99ddc396b48ce3ebfdc0418744f8" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>setVisible</name></member>
      <member refid="classQCPAbstractPlottable_1a661743478a1d3c09d28ec2711d7653d8" prot="protected" virt="non-virtual"><scope>QCPCurve</scope><name>SignDomain</name></member>
      <member refid="classQCPAbstractPlottable_1a3106f9d34d330a6097a8ec5905e5b519" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>valueAxis</name></member>
      <member refid="classQCPLayerable_1a10a3cc92e0fa63e4a929e61d34e275a7" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>visible</name></member>
      <member refid="classQCPCurve_1a667f1bfb610e91105cda6b1606884d66" prot="public" virt="virtual"><scope>QCPCurve</scope><name>~QCPCurve</name></member>
      <member refid="classQCPLayerable_1a4231cf5b3601d6d3a5781283e7a9735b" prot="public" virt="non-virtual"><scope>QCPCurve</scope><name>~QCPLayerable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
